ORFs[Virus==v,stop:=stop+adj]
}
}
return(ORFs)
}
i=3
orfs <- ORFs[Virus==v]
gaps <- gregexpr('-',musc@unmasked[[i]])[[1]] %>% setdiff(-1)
adj <- sapply(orfs$start,FUN=function(s,g) sum(g<s),g=gaps)
adj
adj/3
#(1) ORFs start codons are correct
sapply(ORFs[Virus=='SARS-CoV-2']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_sars) %>% unique
sapply(ORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_rat) %>% unique
sapply(ORFs[Virus=='BANAL52']$start,FUN=function(x,s) substr(s,x,x+2),s=BANAL52) %>% unique
ORFs <- adjust_orfs_to_musc(musc,ORFs) ## account for gaps to adjust ORFs
#(1) ORFs start codons are correct
sapply(ORFs[Virus=='SARS-CoV-2']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_sars) %>% unique
sapply(ORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_rat) %>% unique
sapply(ORFs[Virus=='BANAL52']$start,FUN=function(x,s) substr(s,x,x+2),s=BANAL52) %>% unique
#(2) mutation classification is correct
mutations=Mutations[[3]]
sapply(ORFs[Virus=='SARS-CoV-2']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_sars) %>% unique
sapply(ORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_rat) %>% unique
sapply(ORFs[Virus=='BANAL52']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_banal) %>% unique
M_rat <- classify_mutations(Mutations[[3]],ORFs[Virus=='RaTG13'],seq=musc_rat,sars2=musc_sars)
M_ban <- classify_mutations(Mutations[[5]],ORFs[Virus=='BANAL52'],seq=musc_banal,sars2=musc_sars)
M <- rbind(M_rat,M_ban) ### Note: some rows can be duplicates in some analyses as GCT-->GTC will have rows for C-->T and T-->C
ggplot(M[silent==TRUE],aes(site))+
stat_ecdf(aes(color=Virus),lwd=2)+
scale_x_continuous('Genome Position')+
scale_y_continuous('F(x)')+
ggtitle('Cumulative Proportion of Silent Mutations')+
theme(legend.position=c(0.8,0.3))+
geom_vline(xintercept = unlist(ORFs[Virus=='SARS-CoV-2' & ORF=='S',c('start','stop')]))
Pos <- rbind(bsai_sites(musc@unmasked[[1]],Virus='SARS2'),
bsmbi_sites(musc@unmasked[[1]],Virus='SARS2'),
bsai_sites(musc@unmasked[[2]],Virus='RaTG13'),
bsmbi_sites(musc@unmasked[[2]],Virus='RaTG13'),
bsai_sites(musc@unmasked[[3]],Virus='BANAL52'),
bsmbi_sites(musc@unmasked[[3]],Virus='BANAL52'))
# #BsaI
#  GGTCTC    - sticky end 1:5
# 'CTCTGG'   - sticky end -1:-5
# 'GAGACC'   - this is the strand found in our genomes
#
# #BsmBI
# 'CTCTGC'
# 'GAGACG'
Pos[Virus=='SARS2',overhang:=overhangs(musc@unmasked[[1]],position),by=position]
Pos[Virus=='RaTG13',overhang:=overhangs(musc@unmasked[[2]],position),by=position]
Pos[Virus=='BANAL52',overhang:=overhangs(musc@unmasked[[3]],position),by=position]
REsites=Pos[,list(tots=position+0:5),by=position]$tots %>% unique
M[,list(silent_mut_rate=sum(silent,na.rm=T)/.N),by=Virus]
M[site %in% REsites]
REsites=Pos[,list(tots=position+0:5),by=position]$tots %>% unique
M[,list(silent_mut_rate=sum(silent,na.rm=T)/.N),by=Virus]
#      Virus silent_mut_rate
# 1:  RaTG13       0.7918512
# 2: BANAL52       0.8403548
M[site %in% REsites]
#     site from to ORF   Virus start  stop codon_start codon_stop old_codon new_codon silent
# 1:   2197    t  c  1a  RaTG13   266 13480        2195       2197       GAT       GAC   TRUE
# 2:   9751    a  g  1a  RaTG13   266 13480        9749       9751       AAA       AAG   TRUE
# 3:   9754    g  a  1a  RaTG13   266 13480        9752       9754       AGG       AGA   TRUE
# 4:  10447    a  g  1a  RaTG13   266 13480       10445      10447       AGA       AGG   TRUE
# 5:  11650    t  c  1a  RaTG13   266 13480       11648      11650       GGT       GGC   TRUE
# 6:  22922    c  a   S  RaTG13 21533 25369       22922      22924       CGT       AGA   TRUE
# 7:  22924    t  a   S  RaTG13 21533 25369       22922      22924       CGT       AGA   TRUE
# 8:  22925    c  t   S  RaTG13 21533 25369       22925      22927       CTC       TTG   TRUE
# 9:  22927    c  g   S  RaTG13 21533 25369       22925      22927       CTC       TTG   TRUE
# 10: 24103    g  a   S  RaTG13 21533 25369       24101      24103       AGG       AGA   TRUE
# 11: 24106    t  c   S  RaTG13 21533 25369       24104      24106       GAT       GAC   TRUE
# 12: 24514    c  t   S  RaTG13 21533 25369       24512      24514       CTC       CTT   TRUE
# 13: 10447    a  g  1a BANAL52   242 13432       10445      10447       AGA       AGG   TRUE
# 14: 11650    t  c  1a BANAL52   242 13432       11648      11650       GGT       GGC   TRUE
# 15: 17334    a  g  1b BANAL52 13717 21504       17332      17334       ACA       ACG   TRUE
# 16: 17976    t  c  1b BANAL52 13717 21504       17974      17976       GAT       GAC   TRUE
# 17: 24106    t  c   S BANAL52 21485 25321       24104      24106       GAT       GAC   TRUE
## 12 silent mutations in RaTG13, 4 in BANAl52.
M[!duplicated(site)][site %in% REsites]
BB_sites_RaTG13 <- Pos[Virus %in% c('SARS2','RaTG13'),length(unique(position))]*6
BB_Smuts_RaTG13 <- M[site %in% REsites & Virus=='RaTG13',.N]
SMuts_RaTG13 <- M[Virus=="RaTG13",sum(silent)]-BB_Smuts_RaTG13
RaTG13_genome_nonBB <- nchar(RaTG13)-BB_sites_RaTG13
A_RaTG13 <- matrix(c(BB_Smuts_RaTG13,BB_sites_RaTG13-BB_Smuts_RaTG13,
SMuts_RaTG13,RaTG13_genome_nonBB-SMuts_RaTG13),nrow=2,byrow = T)
BB_sites_BANAL52 <- Pos[Virus %in% c('SARS2','BANAL52'),length(unique(position))]*6
fisher.test(A_RaTG13)
BB_sites_BANAL52 <- Pos[Virus %in% c('SARS2','BANAL52'),length(unique(position))]*6
BB_Smuts_BANAL52 <- M[site %in% REsites & Virus=='BANAL52',.N]
SMuts_BANAL52 <- M[Virus=="BANAL52",sum(silent,na.rm=T)]-BB_Smuts_BANAL52
BANAL52_genome_nonBB <- nchar(BANAL52)-BB_sites_BANAL52
A_BANAL52 <- matrix(c(BB_Smuts_BANAL52,BB_sites_BANAL52-BB_Smuts_BANAL52,
SMuts_BANAL52,BANAL52_genome_nonBB-SMuts_BANAL52),nrow=2,byrow = T)
fisher.test(A_BANAL52)
sapply(ORFs[Virus=='SARS-CoV-2']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_sars) %>% unlist %>% unique
sapply(ORFs[Virus=='SARS-CoV-2']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_sars)
sapply(ORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_rat)
sapply(ORFs[Virus=='BANAL52']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_banal)
sapply(ORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_rat)
ORFs <- read.csv('data/CoV_ORFs.csv') %>% as.data.table
colnames(ORFs)[1] <- 'Virus'
#(1) ORFs start codons are correct
sapply(ORFs[Virus=='SARS-CoV-2']$start,FUN=function(x,s) substr(s,x,x+2),s=SARS2) %>% unique
sapply(ORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=RaTG13) %>% unique
sapply(ORFs[Virus=='BANAL52']$start,FUN=function(x,s) substr(s,x,x+2),s=BANAL52) %>% unique
aORFs <- adjust_orfs_to_musc(musc,ORFs) ## account for gaps to adjust ORFs
sapply(aORFs[Virus=='SARS-CoV-2']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_sars)
sapply(aORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_rat)
i=2
adjust_orfs_to_musc <- function(musc,ORFs){
vs <- c('SARS-CoV-2','RaTG13','BANAL52')
for (i in 1:3){
v=vs[i]
orfs <- ORFs[Virus==v]
gaps <- gregexpr('-',musc@unmasked[[i]])[[1]] %>% setdiff(-1)
if (length(gaps)>0){
adj <- sapply(orfs$start,FUN=function(s,g) sum(g<s),g=gaps)
ORFs[Virus==v,start:=start+adj]
ORFs[Virus==v,stop:=stop+adj]
}
}
return(ORFs)
}
ORFs
aORFs
sapply(aORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_rat)
aORFs[Virus=='RaTG13']
i=2
v=vs[i]
orfs <- ORFs[Virus==v]
gaps <- gregexpr('-',musc@unmasked[[i]])[[1]] %>% setdiff(-1)
length(gaps)>0
adj <- sapply(orfs$start,FUN=function(s,g) sum(g<s),g=gaps)
adj
gaps
ORFs <- read.csv('data/CoV_ORFs.csv') %>% as.data.table
colnames(ORFs)[1] <- 'Virus'
M_rat <- classify_mutations(Mutations[[3]],ORFs[Virus=='RaTG13'],seq=musc_rat,sars2=musc_sars)
M_ban <- classify_mutations(Mutations[[5]],ORFs[Virus=='BANAL52'],seq=musc_banal,sars2=musc_sars)
M <- rbind(M_rat,M_ban) ### Note: some rows can be duplicates in some analyses as GCT-->GTC will have rows for C-->T and T-->C
ggplot(M[silent==TRUE],aes(site))+
stat_ecdf(aes(color=Virus),lwd=2)+
scale_x_continuous('Genome Position')+
scale_y_continuous('F(x)')+
ggtitle('Cumulative Proportion of Silent Mutations')+
theme(legend.position=c(0.8,0.3))+
geom_vline(xintercept = unlist(ORFs[Virus=='SARS-CoV-2' & ORF=='S',c('start','stop')]))
Pos <- rbind(bsai_sites(musc@unmasked[[1]],Virus='SARS2'),
bsmbi_sites(musc@unmasked[[1]],Virus='SARS2'),
bsai_sites(musc@unmasked[[2]],Virus='RaTG13'),
bsmbi_sites(musc@unmasked[[2]],Virus='RaTG13'),
bsai_sites(musc@unmasked[[3]],Virus='BANAL52'),
bsmbi_sites(musc@unmasked[[3]],Virus='BANAL52'))
Pos[Virus=='SARS2',overhang:=overhangs(musc@unmasked[[1]],position),by=position]
Pos[Virus=='RaTG13',overhang:=overhangs(musc@unmasked[[2]],position),by=position]
Pos[Virus=='BANAL52',overhang:=overhangs(musc@unmasked[[3]],position),by=position]
REsites=Pos[,list(tots=position+0:5),by=position]$tots %>% unique
M[,list(silent_mut_rate=sum(silent,na.rm=T)/.N),by=Virus]
gaps
aORFs <- adjust_orfs_to_musc(musc,ORFs)
sapply(ORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_rat)
aORFs[Virus=='RaTG13']
sapply(aORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_rat)
aORFs <- adjust_orfs_to_musc(musc,ORFs)
aORFs
aORFs
ORFs[Virus=='RaTG13']
aORFs[Virus=='RaTG13']
musc
i=2
v=vs[i]
orfs <- ORFs[Virus==v]
gaps <- gregexpr('-',musc@unmasked[[i]])[[1]] %>% setdiff(-1)
adj <- sapply(orfs$start,FUN=function(s,g) sum(g<s),g=gaps)
adj
sapply(aORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_rat)
sapply(aORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_rat)
aORFs <- adjust_orfs_to_musc(musc,ORFs)
sapply(aORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_rat)
aORFs
rm('aORFs')
v=vs[i]
orfs <- ORFs[Virus==v]
gaps <- gregexpr('-',musc@unmasked[[i]])[[1]] %>% setdiff(-1)
adj <- sapply(orfs$start,FUN=function(s,g) sum(g<s),g=gaps)
adj
ORFs
i=2
v=vs[i]
orfs <- ORFs[Virus==v]
gaps <- gregexpr('-',musc@unmasked[[i]])[[1]] %>% setdiff(-1)
ga
gaps
adjust_orfs_to_musc <- function(musc,ORFs){
vs <- c('SARS-CoV-2','RaTG13','BANAL52')
for (i in 1:3){
v=vs[i]
orfs <- ORFs[Virus==v]
gaps <- gregexpr('-',musc@unmasked[[i]])[[1]] %>% setdiff(-1)
if (length(gaps)>0){
shft <- sapply(orfs$start,FUN=function(s,g) sum(g<s),g=gaps)
ORFs[Virus==v]$start <- ORFs[Virus==v]$start + shft
ORFs[Virus==v]$stop <- ORFs[Virus==v]$stop+shft
}
}
return(ORFs)
}
aORFs <- adjust_orfs_to_musc(musc,ORFs)
aORFs[Virus=='RaTG13']
ORFs[Virus=='RaTG13']
sapply(aORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_rat)
sapply(aORFs[Virus=='BANAL52']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_banal)
sapply(aORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_rat)
M_rat <- classify_mutations(Mutations[[3]],ORFs[Virus=='SARS-CoV-2'],seq=musc_rat,sars2=musc_sars)
M_ban <- classify_mutations(Mutations[[5]],ORFs[Virus=='SARS-CoV-2'],seq=musc_banal,sars2=musc_sars)
M <- rbind(M_rat,M_ban) ### Note: some rows can be duplicates in some analyses as GCT-->GTC will have rows for C-->T and T-->C
ggplot(M[silent==TRUE],aes(site))+
stat_ecdf(aes(color=Virus),lwd=2)+
scale_x_continuous('Genome Position')+
scale_y_continuous('F(x)')+
ggtitle('Cumulative Proportion of Silent Mutations')+
theme(legend.position=c(0.8,0.3))+
geom_vline(xintercept = unlist(ORFs[Virus=='SARS-CoV-2' & ORF=='S',c('start','stop')]))
ORFs <- read.csv('data/CoV_ORFs.csv') %>% as.data.table
colnames(ORFs)[1] <- 'Virus'
M_rat <- classify_mutations(Mutations[[3]],ORFs[Virus=='SARS-CoV-2'],seq=musc_rat,sars2=musc_sars)
M_ban <- classify_mutations(Mutations[[5]],ORFs[Virus=='SARS-CoV-2'],seq=musc_banal,sars2=musc_sars)
M <- rbind(M_rat,M_ban) ### Note: some rows can be duplicates in some analyses as GCT-->GTC will have rows for C-->T and T-->C
ggplot(M[silent==TRUE],aes(site))+
stat_ecdf(aes(color=Virus),lwd=2)+
scale_x_continuous('Genome Position')+
scale_y_continuous('F(x)')+
ggtitle('Cumulative Proportion of Silent Mutations')+
theme(legend.position=c(0.8,0.3))+
geom_vline(xintercept = unlist(ORFs[Virus=='SARS-CoV-2' & ORF=='S',c('start','stop')]))
ORFs
ORFs <- read.csv('data/CoV_ORFs.csv') %>% as.data.table
colnames(ORFs)[1] <- 'Virus'
#(1) ORFs start codons are correct
sapply(ORFs[Virus=='SARS-CoV-2']$start,FUN=function(x,s) substr(s,x,x+2),s=SARS2) %>% unique
sapply(ORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=RaTG13) %>% unique
sapply(ORFs[Virus=='BANAL52']$start,FUN=function(x,s) substr(s,x,x+2),s=BANAL52) %>% unique
aORFs <- adjust_orfs_to_musc(musc,ORFs)
sapply(aORFs[Virus=='SARS-CoV-2']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_sars)
sapply(aORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_rat)
sapply(aORFs[Virus=='BANAL52']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_banal)
aORFs
aORFs[Virus=='RaTG13']
ORFs[Virus=='RaTG13']
#(1) ORFs start codons are correct
sapply(aORFs[Virus=='SARS-CoV-2']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_sars)
sapply(aORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_rat)
sapply(aORFs[Virus=='BANAL52']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_banal)
sapply(aORFs[Virus=='RaTG13']$start+1,FUN=function(x,s) substr(s,x,x+2),s=musc_rat)
sapply(aORFs[Virus=='BANAL52']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_banal)
i=2
v=vs[i]
orfs <- ORFs[Virus==v]
gaps <- gregexpr('-',musc@unmasked[[i]])[[1]] %>% setdiff(-1)
gaps
shft <- sapply(orfs$start,FUN=function(s,g) sum(g<s),g=gaps)
shfg
shft
shft[7]
sapply(ORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=RaTG13) %>% unique
orfs
orfs[,(stop-start+1)/3]
x
x=aORFs[Virus=="RaTG13"]$start[7]
substr(musc_rat,x-5,x+4)
substr(musc_rat,x+1,x+3)
adj
sapply(ORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=RaTG13) %>% unique
substr(musc_rat,x-20,x+3)
gaps
substr(musc_sars,x-20,x+3)
substr(musc_rat,x-20,x+3)
gregexpr('-',RaTG13)
gregexpr('ATGGAGATTGATT',RaTG13)
nchar('ATGGAGATTGATT')
27355+12
substr(musc_banal,x-10,x+10)
substr(musc_sars,x-10,x+10)
substr(musc_rat,x-10,x+10)
ORFs[Virus=='RaTG13']
sapply(aORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_rat)
Pos <- rbind(bsai_sites(musc@unmasked[[1]],Virus='SARS2'),
bsmbi_sites(musc@unmasked[[1]],Virus='SARS2'),
bsai_sites(musc@unmasked[[2]],Virus='RaTG13'),
bsmbi_sites(musc@unmasked[[2]],Virus='RaTG13'),
bsai_sites(musc@unmasked[[3]],Virus='BANAL52'),
bsmbi_sites(musc@unmasked[[3]],Virus='BANAL52'))
Pos[Virus=='SARS2',overhang:=overhangs(musc@unmasked[[1]],position),by=position]
Pos[Virus=='RaTG13',overhang:=overhangs(musc@unmasked[[2]],position),by=position]
Pos[Virus=='BANAL52',overhang:=overhangs(musc@unmasked[[3]],position),by=position]
REsites=Pos[,list(tots=position+0:5),by=position]$tots %>% unique
REsites
x
substr(musc_rat,x-20,x)
i
shft
gaps
orfs
gaps
musc
x
rawToChar(unique(charToRaw(musc_rat)))
rawToChar(unique(charToRaw(as.character(musc_rat))))
rawToChar(unique(charToRaw(as.character(musc_sars))))
rawToChar(unique(charToRaw(as.character(musc_banal))))
v=vs[i]
orfs <- ORFs[Virus==v]
gaps <- gregexpr('-',musc@unmasked[[i]])[[1]] %>% setdiff(-1)
gaps
orfs
x
adj
aORFs[Virus=='RaTG13']
sapply(aORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_rat)
Pos
M_rat <- classify_mutations(Mutations[[3]],ORFs[Virus=='RaTG13'],seq=musc_rat,sars2=musc_sars)
M_ban <- classify_mutations(Mutations[[5]],ORFs[Virus=='BANAL52'],seq=musc_banal,sars2=musc_sars)
M <- rbind(M_rat,M_ban)
v=vs[i]
orfs <- ORFs[Virus==v]
gaps <- gregexpr('-',musc@unmasked[[i]])[[1]] %>% setdiff(-1)
shft <- sapply(orfs$start,FUN=function(s,g) sum(g<s),g=gaps)
shft
gaps
s
substr(RaTG1,29830,29840)
substr(RaTG13,29830,29840)
substr(musc_rat,29830,29840)
sapply(gaps,FUN=function(g,s) substr(s,g-9,g+9),s=musc_rat)
sapply(gaps[gaps<29900],FUN=function(g,s) substr(s,g-9,g+9),s=musc_rat)
gaps
sapply(gaps[gaps<29900],FUN=function(g,s) substr(s,g-3,g+3),s=musc_rat)
gaps
gaps[19]
gaps[19:20]
ORFs
gaps[19:20]
orfs
musc
gpas
gaps
musc
#(1) ORFs start codons are correct - these are most important
sapply(ORFs[Virus=='SARS-CoV-2']$start,FUN=function(x,s) substr(s,x,x+2),s=SARS2) %>% unique
sapply(ORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=RaTG13) %>% unique
sapply(ORFs[Virus=='BANAL52']$start,FUN=function(x,s) substr(s,x,x+2),s=BANAL52) %>% unique
#(1) ORFs start codons are correct
sapply(aORFs[Virus=='SARS-CoV-2']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_sars)
sapply(aORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_rat)
sapply(aORFs[Virus=='BANAL52']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_banal)
gaps
shft
shft <- sapply(orfs$start,FUN=function(s,g) sum(g<=s),g=gaps)
shft
gregexpr('-',musc@unmasked[[i]])[[1]]
ORFs
aORFs
gaps
i
x
orfs
xo=27375
xa=x0+shft[7]
xo+shft[7]
xa=xo+shft[7]
substr(RaTG13,xo,xo+3)
substr(RaTG13,xo,xo+2)
substr(musc_rat,xa,xa+2)
substr(musc_rat,xa-3,xa+4)
substr(RaTG13,xo-4,xo+3)
gps
gaps
substr(musc_rat,26530,26539
)
shft
xa
xo
rep(0,orfs[.N])
rep(0,orfs[,.N])
n=orfs[,.N]
shft=rep(0,orfs[,.N])
gaps <- gregexpr('-',musc@unmasked[[i]])[[1]] %>% setdiff(-1)
n=orfs[,.N]
shft=rep(0,orfs[,.N])
for (j in 1:n){
shft[j] <- sum(gaps < (orfs$start[j]+sum(shft)))
}
shft
adjust_orfs_to_musc <- function(musc,ORFs){
### Muscle alignment contains A---C for gaps
### Have to shift each start/stop codon by number of "-" that precede them
vs <- c('SARS-CoV-2','RaTG13','BANAL52')
for (i in 1:3){
v=vs[i]
orfs <- ORFs[Virus==v]
gaps <- gregexpr('-',musc@unmasked[[i]])[[1]] %>% setdiff(-1)
if (length(gaps)>0){
n=orfs[,.N]
shft=rep(0,orfs[,.N])
for (j in 1:n){
shft[j] <- sum(gaps < (orfs$start[j]+sum(shft)))
}
ORFs[Virus==v]$start <- ORFs[Virus==v]$start+shft
ORFs[Virus==v]$stop <- ORFs[Virus==v]$stop+shft
}
}
return(ORFs)
}
aORFs <- adjust_orfs_to_musc(musc,ORFs)
#(1) ORFs start codons are correct
sapply(aORFs[Virus=='SARS-CoV-2']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_sars)
sapply(aORFs[Virus=='RaTG13']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_rat)
sapply(aORFs[Virus=='BANAL52']$start,FUN=function(x,s) substr(s,x,x+2),s=musc_banal)
rm(list=ls())
gc()
library(ape)
library(data.table)
library(ggplot2)
library(magrittr)
library(xlsx)
library(rentrez)
library(muscle)
library(DECIPHER)
library(ggpubr)
library(adegenet)
source('scripts/utils.R')
theme_set(theme_bw(base_size=15))
data("RESTRICTION_ENZYMES")
CoV_Legend <- read.csv('data/CoV_genome_to_tree_legend.csv') %>% as.data.table
cls <- viridis::viridis(3)
# Load genomes ------------------------------------------------------------
filepath=paste0('data/fasta_files/genome_accn_',CoV_Legend[tip.label=='SARS2-WHu1',Accession],'[accn].fasta')
SARS2=read.FASTA(filepath) %>%
as.character %>% lapply(.,paste0,collapse="") %>% unlist %>% DNAStringSet
filepath=paste0('data/fasta_files/genome_accn_',CoV_Legend[tip.label=='RaTG13',Accession],'[accn].fasta')
RaTG13=read.FASTA(filepath) %>%
as.character %>% lapply(.,paste0,collapse="") %>% unlist %>% DNAStringSet
filepath=paste0('data/fasta_files/genome_accn_',CoV_Legend[tip.label=='BANAL-52',Accession],'[accn].fasta')
BANAL52=read.FASTA(filepath) %>%
as.character %>% lapply(.,paste0,collapse="") %>% unlist %>% DNAStringSet
SEQs <- c(SARS2,RaTG13,BANAL52)
# Align genomes -----------------------------------------------------------
musc <- muscle(SEQs)
musc_sars <- musc@unmasked[["NC_045512.2 Severe acute respiratory syndrome coronavirus 2 isolate Wuhan-Hu-1, complete genome"]]
musc_rat  <- musc@unmasked[["MN996532.2 Bat coronavirus RaTG13, complete genome" ]]
musc_banal <- musc@unmasked[["MZ937000.1 Bat coronavirus isolate BANAL-20-52/Laos/2020, complete genome"]]
X <- as.DNAbin(musc)
Mutations <- findMutations(X)
names(Mutations)
# [1] "NC_045512.2 Severe acute respiratory syndrome coronavirus 2 isolate Wuhan-Hu-1, complete genome->MN996532.2 Bat coronavirus RaTG13, complete genome"
# [2] "NC_045512.2 Severe acute respiratory syndrome coronavirus 2 isolate Wuhan-Hu-1, complete genome->MZ937000.1 Bat coronavirus isolate BANAL-20-52/Laos/2020, complete genome"
# [3] "MN996532.2 Bat coronavirus RaTG13, complete genome->NC_045512.2 Severe acute respiratory syndrome coronavirus 2 isolate Wuhan-Hu-1, complete genome"
# [4] "MN996532.2 Bat coronavirus RaTG13, complete genome->MZ937000.1 Bat coronavirus isolate BANAL-20-52/Laos/2020, complete genome"
# [5] "MZ937000.1 Bat coronavirus isolate BANAL-20-52/Laos/2020, complete genome->NC_045512.2 Severe acute respiratory syndrome coronavirus 2 isolate Wuhan-Hu-1, complete genome"
# [6] "MZ937000.1 Bat coronavirus isolate BANAL-20-52/Laos/2020, complete genome->MN996532.2 Bat coronavirus RaTG13, complete genome"
Dists <- lapply(Mutations[c(3,5)],getElement,'short') %>% sapply(length)
##1135 mutations RaTG13-->SARS2
## 903 mutations BANAL52-->SARS2
save(list=ls(),file='data/close_relative_alignments.Rds')
# Mutations -------------------------------------------------------
RaTsites <- Mutations[[3]]$short %>% strsplit(':') %>% sapply(getElement,1) %>% as.numeric
BANALsites <- Mutations[[5]]$short %>% strsplit(':') %>% sapply(getElement,1) %>% as.numeric
### Classify these as S/N
ORFs <- read.csv('data/CoV_ORFs.csv') %>% as.data.table
colnames(ORFs)[1] <- 'Virus'
ORFs <- adjust_orfs_to_musc(musc,ORFs) ## account for gaps to adjust ORFs
M_rat <- classify_mutations(Mutations[[3]],ORFs[Virus=='RaTG13'],seq=musc_rat,sars2=musc_sars)
M_ban <- classify_mutations(Mutations[[5]],ORFs[Virus=='BANAL52'],seq=musc_banal,sars2=musc_sars)
M <- rbind(M_rat,M_ban) ### Note: some rows can be duplicates in some analyses as GCT-->GTC will have rows for C-->T and T-->C
ggplot(M[silent==TRUE],aes(site))+
stat_ecdf(aes(color=Virus),lwd=2)+
scale_x_continuous('Genome Position')+
scale_y_continuous('F(x)')+
ggtitle('Cumulative Proportion of Silent Mutations')+
theme(legend.position=c(0.8,0.3))+
geom_vline(xintercept = unlist(ORFs[Virus=='SARS-CoV-2' & ORF=='S',c('start','stop')]))
# Silent Mutations & Overhangs ------------------------------------------------
Pos <- rbind(bsai_sites(musc@unmasked[[1]],Virus='SARS2'),
bsmbi_sites(musc@unmasked[[1]],Virus='SARS2'),
bsai_sites(musc@unmasked[[2]],Virus='RaTG13'),
bsmbi_sites(musc@unmasked[[2]],Virus='RaTG13'),
bsai_sites(musc@unmasked[[3]],Virus='BANAL52'),
bsmbi_sites(musc@unmasked[[3]],Virus='BANAL52'))
Pos[Virus=='SARS2',overhang:=overhangs(musc@unmasked[[1]],position),by=position]
Pos[Virus=='RaTG13',overhang:=overhangs(musc@unmasked[[2]],position),by=position]
Pos[Virus=='BANAL52',overhang:=overhangs(musc@unmasked[[3]],position),by=position]
REsites=Pos[,list(tots=position+0:5),by=position]$tots %>% unique
M[,list(silent_mut_rate=sum(silent,na.rm=T)/.N),by=Virus]
M[site %in% REsites]
M[!duplicated(site)][site %in% REsites]
.84^14
BB_sites_RaTG13 <- Pos[Virus %in% c('SARS2','RaTG13'),length(unique(position))]*6
BB_Smuts_RaTG13 <- M[site %in% REsites & Virus=='RaTG13',.N]
SMuts_RaTG13 <- M[Virus=="RaTG13",sum(silent)]-BB_Smuts_RaTG13
RaTG13_genome_nonBB <- nchar(RaTG13)-BB_sites_RaTG13
A_RaTG13 <- matrix(c(BB_Smuts_RaTG13,BB_sites_RaTG13-BB_Smuts_RaTG13,
SMuts_RaTG13,RaTG13_genome_nonBB-SMuts_RaTG13),nrow=2,byrow = T)
fisher.test(A_RaTG13)
BB_sites_BANAL52 <- Pos[Virus %in% c('SARS2','BANAL52'),length(unique(position))]*6
BB_Smuts_BANAL52 <- M[site %in% REsites & Virus=='BANAL52',.N]
SMuts_BANAL52 <- M[Virus=="BANAL52",sum(silent,na.rm=T)]-BB_Smuts_BANAL52
BANAL52_genome_nonBB <- nchar(BANAL52)-BB_sites_BANAL52
A_BANAL52 <- matrix(c(BB_Smuts_BANAL52,BB_sites_BANAL52-BB_Smuts_BANAL52,
SMuts_BANAL52,BANAL52_genome_nonBB-SMuts_BANAL52),nrow=2,byrow = T)
fisher.test(A_BANAL52)

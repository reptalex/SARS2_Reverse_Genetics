theme(legend.position=c(.8,.8))+
ggtitle('Fingerprint of Golden Gate Assembly')
ggarrange(ggarrange(g_mers_rs,g_wiv_rs,nrow=2,align = 'v',labels=c('A','B')),
g_Ln,ncol=2,widths=c(1.5,3),labels=c(NA,'C'))
ggsave('figures/fingerprint_of_GG_assembly.png',height=8,width=18)
g_Ln=ggplot(all_max_frags[no_fragments<=15 & gene!='SARS2'],
aes(factor(no_fragments),max_fragment_length))+
geom_boxplot(lwd=2)+
scale_x_discrete('Number of Fragments')+
scale_y_continuous('Length of Longest Fragment')+
geom_segment(aes(x = max_rs[virus=='WIV1']$no_fragments,
xend = max_rs[virus=='rWIV1']$no_fragments*0.99,
y=max_rs[virus=='WIV1']$max_fragment_length,
yend = max_rs[virus=='rWIV1']$max_fragment_length*1.1),
arrow = arrow(length = unit(0.5, "cm")),lwd=1.5,color=cls[1])+
geom_segment(aes(x = max_rs[virus=='MERS']$no_fragments,
xend = max_rs[virus=='rMERS']$no_fragments*0.99,
y=max_rs[virus=='MERS']$max_fragment_length,
yend = max_rs[virus=='rMERS']$max_fragment_length*1.1),
arrow = arrow(length = unit(0.5, "cm")),lwd=1.5,color=cls[3])+
geom_point(data=max_rs,aes(color=virus),cex=5)+
scale_color_manual(values=c('black',cls[3],NA,cls[1]))+
theme(legend.position=c(.8,.8))+
ggtitle('Fingerprint of Golden Gate Assembly')
ggarrange(ggarrange(g_mers_rs,g_wiv_rs,nrow=2,align = 'v',labels=c('A','B')),
g_Ln,ncol=2,widths=c(1.5,3),labels=c(NA,'C'))
ggsave('figures/fingerprint_of_GG_assembly.png',height=8,width=18)
g_Ln=ggplot(all_max_frags[no_fragments<=15 & gene!='SARS2'],
aes(factor(no_fragments),max_fragment_length))+
geom_boxplot(lwd=2,col='darkgrey')+
scale_x_discrete('Number of Fragments')+
scale_y_continuous('Length of Longest Fragment')+
geom_segment(aes(x = max_rs[virus=='WIV1']$no_fragments,
xend = max_rs[virus=='rWIV1']$no_fragments*0.99,
y=max_rs[virus=='WIV1']$max_fragment_length,
yend = max_rs[virus=='rWIV1']$max_fragment_length*1.1),
arrow = arrow(length = unit(0.5, "cm")),lwd=1.5,color=cls[1])+
geom_segment(aes(x = max_rs[virus=='MERS']$no_fragments,
xend = max_rs[virus=='rMERS']$no_fragments*0.99,
y=max_rs[virus=='MERS']$max_fragment_length,
yend = max_rs[virus=='rMERS']$max_fragment_length*1.1),
arrow = arrow(length = unit(0.5, "cm")),lwd=1.5,color=cls[3])+
geom_point(data=max_rs,aes(color=virus),cex=5)+
scale_color_manual(values=c('black',cls[3],NA,cls[1]))+
theme(legend.position=c(.8,.8))+
ggtitle('Fingerprint of Golden Gate Assembly')
ggarrange(ggarrange(g_mers_rs,g_wiv_rs,nrow=2,align = 'v',labels=c('A','B')),
g_Ln,ncol=2,widths=c(1.5,3),labels=c(NA,'C'))
ggsave('figures/fingerprint_of_GG_assembly.png',height=8,width=18)
g_Ln=ggplot(all_max_frags[no_fragments<=15 & gene!='SARS2'],
aes(factor(no_fragments),max_fragment_length))+
geom_boxplot(lwd=2,col='darkgrey')+
scale_x_discrete('Number of Fragments')+
scale_y_continuous('Length of Longest Fragment')+
geom_segment(aes(x = max_rs[virus=='WIV1']$no_fragments,
xend = max_rs[virus=='rWIV1']$no_fragments*0.99,
y=max_rs[virus=='WIV1']$max_fragment_length,
yend = max_rs[virus=='rWIV1']$max_fragment_length*1.1),
arrow = arrow(length = unit(0.5, "cm")),lwd=1.5,color=cls[1])+
geom_segment(aes(x = max_rs[virus=='MERS']$no_fragments,
xend = max_rs[virus=='rMERS']$no_fragments*0.99,
y=max_rs[virus=='MERS']$max_fragment_length,
yend = max_rs[virus=='rMERS']$max_fragment_length*1.1),
arrow = arrow(length = unit(0.5, "cm")),lwd=1.5,color=cls[3])+
geom_point(data=max_rs,aes(color=virus),cex=7)+
scale_color_manual(values=c('black',cls[3],NA,cls[1]))+
theme(legend.position=c(.8,.8))+
ggtitle('Fingerprint of Golden Gate Assembly')
ggarrange(ggarrange(g_mers_rs,g_wiv_rs,nrow=2,align = 'v',labels=c('A','B')),
g_Ln,ncol=2,widths=c(1.5,3),labels=c(NA,'C'))
ggsave('figures/fingerprint_of_GG_assembly.png',height=8,width=18)
all_max_frags
all_max_frags[grepl('BsaI +')]
all_max_frags[grepl('BsaI +',Restriction_Enzyme)]
max_frags
max_frags %>% ggplot(no_fragments)+geom_histogram()
ecdf(max_frags$no_fragments)(6)
ecdf(all_max_frags[grepl(' + ',Restriction_Enzyme)]$no_fragments)(6)
all_max_frags
all_max_frags[grepl('//+',Restriction_Enzyme)]
all_max_frags[grepl('+',Restriction_Enzyme)]
all_max_frags[grepl(' ',Restriction_Enzyme)]
ecdf(all_max_frags[grepl(' ',Restriction_Enzyme)]$no_fragments)(6)
median(all_max_frags[grepl(' ',Restriction_Enzyme)]$no_fragments)
mean(all_max_frags[grepl(' ',Restriction_Enzyme)]$no_fragments)
ecdf(all_max_frags[grepl(' ',Restriction_Enzyme)]$no_fragments)(8)
ecdf(all_max_frags[grepl(' ',Restriction_Enzyme)]$no_fragments)(5)
ecdf(all_max_frags[grepl(' ',Restriction_Enzyme)]$no_fragments)(8)-
ecdf(all_max_frags[grepl(' ',Restriction_Enzyme)]$no_fragments)(5)
ecdf(all_max_frags[grepl(' ',Restriction_Enzyme)]$no_fragments)(7)-
ecdf(all_max_frags[grepl(' ',Restriction_Enzyme)]$no_fragments)(5)
all_max_frags[grepl(' ',Restriction_Enzyme)]$no_fragments %>% hist(bins=30)
all_max_frags[grepl(' ',Restriction_Enzyme)]$no_fragments %>% hist(bins=100)
all_max_frags[grepl(' ',Restriction_Enzyme) & no_fragments>0]$no_fragments %>% hist(bins=100)
all_max_frags[grepl(' ',Restriction_Enzyme) & no_fragments>0]$no_fragments %>% hist(bins=100,log='x')
ecdf(all_max_frags[grepl(' ',Restriction_Enzyme)]$no_fragments)(7)-
ecdf(all_max_frags[grepl(' ',Restriction_Enzyme)]$no_fragments)(5)
all_max_frags[grepl(' ',Restriction_Enzyme)] %>%
ggplot(aes(no_fragments))+
geom_hist()
all_max_frags[grepl(' ',Restriction_Enzyme)] %>%
ggplot(aes(no_fragments))+
geom_hist()
all_max_frags[grepl(' ',Restriction_Enzyme)] %>%
ggplot(aes(no_fragments))+
geom_histogram()
all_max_frags[grepl(' ',Restriction_Enzyme)] %>%
ggplot(aes(no_fragments))+
geom_histogram()+
scale_x_continuous(trans='log')
all_max_frags[grepl(' ',Restriction_Enzyme)] %>%
ggplot(aes(no_fragments))+
geom_histogram()+
scale_x_continuous(trans='log',breaks=2^(0:10))
all_max_frags[grepl(' ',Restriction_Enzyme)] %>%
ggplot(aes(no_fragments))+
geom_histogram()+
scale_x_continuous(trans='log',breaks=2^(0:10))+
geom_vline(xintercept = 5,color='steelblue')+
geom_vline(yintercept = 7,color='steelblue')+
geom_vline(yintercept=6,lwd=5,color='steelblue')
all_max_frags[grepl(' ',Restriction_Enzyme)] %>%
ggplot(aes(no_fragments))+
geom_histogram()+
scale_x_continuous(trans='log',breaks=2^(0:10))+
geom_vline(xintercept = 5,color='steelblue')+
geom_vline(xintercept = 7,color='steelblue')+
geom_vline(xintercept=6,lwd=5,color='steelblue')
all_max_frags[grepl(' ',Restriction_Enzyme)] %>%
ggplot(aes(no_fragments))+
geom_histogram()+
scale_x_continuous(trans='log',breaks=2^(0:10))+
geom_vline(xintercept = 5,color='steelblue')+
geom_vline(xintercept = 7,color='steelblue')+
geom_vline(xintercept=6,lwd=10,color='steelblue')
all_max_frags[grepl(' ',Restriction_Enzyme)] %>%
ggplot(aes(no_fragments))+
geom_histogram()+
scale_x_continuous(trans='log',breaks=2^(0:10))+
geom_vline(xintercept = 5,color='steelblue')+
geom_vline(xintercept = 7)+
geom_vline(xintercept=6,lwd=10,color='steelblue')
all_max_frags[grepl(' ',Restriction_Enzyme)] %>%
ggplot(aes(no_fragments))+
geom_histogram()+
scale_x_continuous(trans='log',breaks=2^(0:10))+
geom_vline(xintercept = 5,color='steelblue')+
geom_vline(xintercept = 7)+
geom_vline(xintercept=6,lwd=9,color='steelblue')
all_max_frags[grepl(' ',Restriction_Enzyme)] %>%
ggplot(aes(no_fragments))+
geom_histogram()+
scale_x_continuous(trans='log',breaks=2^(0:10))+
geom_vline(xintercept = 5,color='steelblue')+
geom_vline(xintercept = 7,color='steelblue')+
geom_vline(xintercept=6,lwd=9,color='steelblue')
all_max_frags[grepl(' ',Restriction_Enzyme)] %>%
ggplot(aes(no_fragments))+
geom_histogram()+
scale_x_continuous(trans='log',breaks=2^(0:10))+
geom_vline(xintercept = 5,color='steelblue')+
geom_vline(xintercept = 7,color='steelblue',lwd=2)+
geom_vline(xintercept=6,lwd=9,color='steelblue')
all_max_frags[grepl(' ',Restriction_Enzyme)] %>%
ggplot(aes(no_fragments))+
geom_histogram()+
scale_x_continuous(trans='log',breaks=2^(0:10))+
geom_vline(xintercept=6,lwd=10,color='steelblue',alpha=0.4)
all_max_frags[grepl(' ',Restriction_Enzyme)] %>%
ggplot(aes(no_fragments))+
geom_histogram()+
scale_x_continuous(trans='log',breaks=2^(0:10))+
geom_vline(xintercept=6,lwd=10,color='steelblue',alpha=0.7)
all_max_frags[grepl(' ',Restriction_Enzyme)] %>%
ggplot(aes(no_fragments))+
geom_histogram()+
scale_x_continuous(trans='log',breaks=2^(0:10))+
geom_vline(xintercept=6,lwd=10,color='steelblue',alpha=0.7)+
geom_vline(xintercept = 6,lwd=2,col='red')
all_max_frags[grepl(' ',Restriction_Enzyme)] %>%
ggplot(aes(no_fragments))+
geom_histogram()+
scale_x_continuous(trans='log',breaks=2^(0:10))+
geom_vline(xintercept=6,lwd=10,color='steelblue',alpha=0.7)+
geom_vline(xintercept = 6,lwd=2,col='red')+
ggtitle('SARS-CoV-2 falls within ideal window for reverse-genetic system')
all_max_frags[grepl(' ',Restriction_Enzyme)] %>%
ggplot(aes(no_fragments))+
geom_freqpoly()+
scale_x_continuous(trans='log',breaks=2^(0:10))+
geom_vline(xintercept=6,lwd=10,color='steelblue',alpha=0.7)+
geom_vline(xintercept = 6,lwd=2,col='red')+
ggtitle('SARS-CoV-2 falls within ideal window for reverse-genetic system')
all_max_frags[grepl(' ',Restriction_Enzyme)] %>%
ggplot(aes(no_fragments))+
geom_histogram(alpha=0.8)+
scale_x_continuous(trans='log',breaks=2^(0:10))+
geom_vline(xintercept=6,lwd=10,color='steelblue',alpha=0.7)+
geom_vline(xintercept = 6,lwd=2,col='red')+
ggtitle('SARS-CoV-2 falls within ideal window for reverse-genetic system')
all_max_frags[grepl(' ',Restriction_Enzyme)] %>%
ggplot(aes(no_fragments))+
geom_histogram(fill=rgb(0,0,0,0.8),col='black')+
scale_x_continuous(trans='log',breaks=2^(0:10))+
geom_vline(xintercept=6,lwd=10,color='steelblue',alpha=0.7)+
geom_vline(xintercept = 6,lwd=2,col='red')+
ggtitle('SARS-CoV-2 falls within ideal window for reverse-genetic system')
all_max_frags[grepl(' ',Restriction_Enzyme)] %>%
ggplot(aes(no_fragments))+
geom_histogram(fill=rgb(0,0,0,0.5),col='black',bins=50)+
scale_x_continuous(trans='log',breaks=2^(0:10))+
geom_vline(xintercept=6,lwd=10,color='steelblue',alpha=0.7)+
geom_vline(xintercept = 6,lwd=2,col='red')+
ggtitle('SARS-CoV-2 falls within ideal window for reverse-genetic system')
all_max_frags[grepl(' ',Restriction_Enzyme)] %>%
ggplot(aes(no_fragments))+
geom_histogram(fill=rgb(0,0,0,0.5),col='black',bins=50)+
scale_x_continuous(trans='log',breaks=2^(0:10))+
geom_vline(xintercept=6,lwd=10,color='steelblue',alpha=0.7)+
geom_vline(xintercept = 6,lwd=2,col='red')+
ggtitle('SARS-CoV-2 has ideal no. fragments for reverse-genetic system')
all_max_frags[grepl(' ',Restriction_Enzyme)]$no_fragments %>% mean
ls()
max_frags
max_frags[gene=='RaTG13']
g_recomb
g_recomb+geom_point(data=max_frags[gene=='RaTG13'],cex=4,color='green')
g_recomb+geom_point(data=max_frags[gene %in% c('RaTG13','BANAL-20-52','BANAL-20-103')],cex=4,color='green')
all_max_frags[no_fragments==6]
all_max_frags[no_fragments==6][order(max_fragment_length,decreasing = T)]
all_max_frags[no_fragments==6][order(max_fragment_length,decreasing = F)]
all_max_frags[no_fragments==6][order(max_fragment_length,decreasing = F)][1:20]
all_max_frags[no_fragments==7][order(max_fragment_length,decreasing = F)][1:20]
max_frags
all_max_frags[no_fragments==6][order(max_fragment_length,decreasing = F)][1:20]
ggplot(BglI,aes(tip.label,rel_position))+
geom_point(aes(color=backbone,fill=backbone,pch=backbone,size=backbone))+
coord_flip()+
ggtitle('BglI Sites: all CoVs')+
scale_color_manual(values=c(rep('black',4),'darkgrey'))+
scale_fill_manual(values=c(cls,'red',NA))+
scale_shape_manual(values=c(21,21,21,21,16))+
scale_size_manual(values=c(4,4,4,4,2))
library(ape)
library(picante)
library(data.table)
library(ggplot2)
library(magrittr)
library(rentrez)
library(DECIPHER)
library(patchwork)
library(ggpubr)
library(muscle)
library(msa)
library(seqinr)
library(ggtree)
library(xlsx)
library(phytools)
source('scripts/utils.R')
theme_set(theme_bw(base_size=15))
load('data/spike_alignment_workspace2.Rd')
# mapping tree tip-labels to accession numbers ----------------------------
CoV_Legend$Accession <- CoV_Legend$NCBI %>% strsplit('\\.') %>% sapply(getElement,1) %>% gsub("\\'",'',.) %>% gsub(' ','_',.)
BsaI <- lapply(CoV_Legend$Accession,digest_genome,enzymes='BsaI',fragments=FALSE) %>% rbindlist
BsmBI <- lapply(CoV_Legend$Accession,digest_genome,enzymes='BsmBI',fragments=FALSE) %>% rbindlist
BsSites <- rbind(BsaI,BsmBI)
BsSites[,rel_position:=position/genome_length]
enzymes='PciAI'
BglI <- lapply(CoV_Legend$Accession,digest_genome,enzymes=enzymes,fragments=FALSE) %>% rbindlist
enzymes='PciI'
BglI <- lapply(CoV_Legend$Accession,digest_genome,enzymes=enzymes,fragments=FALSE) %>% rbindlist
BglI[,rel_position:=position/genome_length]
cv=CoV_Legend
setkey(cv,Accession)
setkey(BglI,Accession)
BglI=BglI[cv[,c('Accession','tip.label')]]
BglI[,tip.label:=factor(tip.label,levels=tree$tip.label)]
### Need to add lines showing SARS2 and CoVs for which BglI was used.
# pBAC-SARS-CoVFL
# SARS-CoV
# Bat-SCoV
# MERS-CoV
# SARS-CoV Urban
# SL-CoV WIV1
rcovs=c('WIV1','MERS-HCoV','SARS1-Urbani','SARS1')
BglI[tip.label=='WIV1',backbone:='WIV1']
BglI[grepl('SARS1',tip.label),backbone:='SARS1']
BglI[grepl('MERS',tip.label),backbone:='MERS']
BglI[grepl('SARS2',tip.label),backbone:='SARS2']
BglI[is.na(backbone),backbone:='other']
BglI[,backbone:=factor(backbone,levels=c('SARS1','MERS','WIV1','SARS2','other'))]
cls =gg_color_hue(3)
ggplot(BglI,aes(tip.label,rel_position))+
geom_point(aes(color=backbone,fill=backbone,pch=backbone,size=backbone))+
coord_flip()+
ggtitle(paste0(enzymes,'Sites: all CoVs')+
scale_color_manual(values=c(rep('black',4),'darkgrey'))+
scale_fill_manual(values=c(cls,'red',NA))+
scale_shape_manual(values=c(21,21,21,21,16))+
scale_size_manual(values=c(4,4,4,4,2))
enzymes
enzymes
BglI <- lapply(CoV_Legend$Accession,digest_genome,
enzymes=enzymes,fragments=FALSE) %>% rbindlist
BglI[,rel_position:=position/genome_length]
cv=CoV_Legend
setkey(cv,Accession)
setkey(BglI,Accession)
BglI=BglI[cv[,c('Accession','tip.label')]]
BglI[,tip.label:=factor(tip.label,levels=tree$tip.label)]
ggplot(BglI,aes(tip.label,rel_position))+
geom_point(aes(color=backbone,fill=backbone,pch=backbone,size=backbone))+
coord_flip()+
ggtitle(paste0(enzymes,'Sites'))+
scale_color_manual(values=c(rep('black',4),'darkgrey'))+
scale_fill_manual(values=c(cls,'red',NA))+
scale_shape_manual(values=c(21,21,21,21,16))+
scale_size_manual(values=c(4,4,4,4,2))
ggplot(BglI,aes(tip.label,rel_position))+
geom_point(color='grey',cex=2)+
geom_point(data=BglI[gene==highlight],color='green',cex=4)+
coord_flip()+
ggtitle(paste0(enzymes,'Sites'))+
scale_color_manual(values=c(rep('black',4),'darkgrey'))+
scale_fill_manual(values=c(cls,'red',NA))+
scale_shape_manual(values=c(21,21,21,21,16))+
scale_size_manual(values=c(4,4,4,4,2)) %>%
return
BglI
cv
highlight='HKU1'
ggplot(BglI,aes(tip.label,rel_position))+
geom_point(color='grey',cex=2)+
geom_point(data=BglI[tip.label==highlight],color='green',cex=4)+
coord_flip()+
ggtitle(paste0(enzymes,'Sites'))+
scale_color_manual(values=c(rep('black',4),'darkgrey'))+
scale_fill_manual(values=c(cls,'red',NA))+
scale_shape_manual(values=c(21,21,21,21,16))+
scale_size_manual(values=c(4,4,4,4,2))
plot_map <- function(enzymes=c('BsaI','BsmBI'),highlight=NULL,
CoV_Legend.=CoV_Legend,
tree.=tree){
BglI <- lapply(CoV_Legend$Accession,digest_genome,
enzymes=enzymes,fragments=FALSE) %>% rbindlist
BglI[,rel_position:=position/genome_length]
cv=CoV_Legend
setkey(cv,Accession)
setkey(BglI,Accession)
BglI=BglI[cv[,c('Accession','tip.label')]]
BglI[,tip.label:=factor(tip.label,levels=tree$tip.label)]
ggplot(BglI,aes(tip.label,rel_position))+
geom_point(color='grey',cex=2)+
geom_point(data=BglI[tip.label==highlight],color='green',cex=4)+
coord_flip()+
ggtitle(paste0(enzymes,' Sites'))+
scale_color_manual(values=c(rep('black',4),'darkgrey'))+
scale_fill_manual(values=c(cls,'red',NA))+
scale_shape_manual(values=c(21,21,21,21,16))+
scale_size_manual(values=c(4,4,4,4,2)) %>%
return
}
PciI <- plot_map('PciI',highlight='HKU3')
BcaHI <- plot_map('BcaHI',highlight='WIV1')
max_frags
all_max_frags[no_fragments==6][order(max_fragment_length)]
all_max_frags[no_fragments==6][order(max_fragment_length)][1:20]
BsaHI <- plot_map('BsaHI',highlight='WIV1')
BsaHI
plot_map <- function(enzymes=c('BsaI','BsmBI'),highlight=NULL,
CoV_Legend.=CoV_Legend,
tree.=tree){
BglI <- lapply(CoV_Legend$Accession,digest_genome,
enzymes=enzymes,fragments=FALSE) %>% rbindlist
BglI[,rel_position:=position/genome_length]
cv=CoV_Legend
setkey(cv,Accession)
setkey(BglI,Accession)
BglI=BglI[cv[,c('Accession','tip.label')]]
BglI[,tip.label:=factor(tip.label,levels=tree$tip.label)]
ggplot(BglI,aes(tip.label,rel_position))+
geom_point(color='grey',cex=2)+
geom_point(data=BglI[tip.label==highlight],color='green',cex=4)+
coord_flip()+
ggtitle(paste0(enzymes,' Sites'))+
scale_color_manual(values=c(rep('black',4),'darkgrey'))+
scale_fill_manual(values=c(cls,'red',NA))+
scale_shape_manual(values=c(21,21,21,21,16))+
geom_hline(yintercept = BglI[tip.label==highlight]$rel_position,lty=2)+
scale_size_manual(values=c(4,4,4,4,2)) %>%
return
}
PciI <- plot_map('PciI',highlight='HKU3')
BsaHI <- plot_map('BsaHI',highlight='WIV1')
PciI <- plot_map('PciI',highlight='HKU3')
BsaHI <- plot_map('BsaHI',highlight='WIV1')
EciI <- plot_map('EciI',highlight = 'MHV-A59')
ggarrange(PciI,BsaHI,EciI,ncol=3)
warnings
tree$tip.label
EciI <- plot_map('EciI',highlight = 'MHV-A59-2')
ggarrange(PciI,BsaHI,EciI,ncol=3)
enzymes='PciI'
BglI <- lapply(CoV_Legend$Accession,digest_genome,
enzymes=enzymes,fragments=FALSE) %>% rbindlist
BglI <- lapply(CoV_Legend$Accession,digest_genome,
enzymes=enzymes,fragments=TRUE) %>% rbindlist
BglI
BglI[,rel_position:=position/genome_length]
BglI[,rel:=max_fragment_length/genome_length]
BglI[no_fragments==6]
cv[Accessio=='NC_006577']
cv[Accession=='NC_006577']
PciI <- plot_map('PciI',highlight='HKU1')
BsaHI <- plot_map('BsaHI',highlight='WIV1')
EciI <- plot_map('EciI',highlight = 'MHV-A59-2')
ggarrange(PciI,BsaHI,EciI,ncol=3)
ggsave('~/COVID/Origins/RestrictionSites/figures/other_evenly_spaced_6_fragment_covs.png',
height=10,width=20)
BglI
BglI[no_fragments==6]
RESTRICTION_ENZYMES['PciI']
RESTRICTION_ENZYMES['EciI']
RESTRICTION_ENZYMES['BsaHI']
max_frags
BsaI <- lapply(CoV_Legend$Accession,digest_genome,enzymes='BsaI',fragments=FALSE) %>% rbindlist
BsmBI <- lapply(CoV_Legend$Accession,digest_genome,enzymes='BsmBI',fragments=FALSE) %>% rbindlist
BsSites <- rbind(BsaI,BsmBI)
BsSites
BsSites[,rel_position:=position/genome_length]
cv=CoV_Legend
setkey(cv,Accession)
setkey(BsSites,Accession)
BsSites=BsSites[cv[,c('Accession','tip.label')]]
BsSites[tip.label=='SARS2']
BsSites
BsSites[grepl('SARS2',tip.label)]
675*3
24097
GenomeSeqs <- referenceSeqs() %>% as.data.table
GenomeSeqs[,gene_accn:=Accession]
GenomeSeqs$Accession <- strsplit(GenomeSeqs$gene_accn,'\\.') %>% sapply(getElement,1)
Seqs <- rbind(seqs[,c('Species','Accession','start','stop')],
GenomeSeqs[!Accession %in% seqs$Accession,c('Species','Accession','start','stop')])
Seqs[grepl('SARS2',Species)]
21563+2025
21573+3*693
24097-21573
2524/3
g_recomb+geom_point(data=max_frags[grepl('BANAL',gene) | grepl('RaT',gene)],aes(color=gene))
g_recomb+geom_point(data=max_frags[grepl('BANAL',gene) | grepl('RaT',gene)],aes(color=gene))+
scale_color_manual(values=gg_color_hue(12))
g_recomb+geom_point(data=max_frags[grepl('BANAL',gene) | grepl('RaT',gene)],aes(color=gene),cex=6)+
scale_color_manual(values=gg_color_hue(12))
G_mers <- get_genome(accns['MERS'])
G2 <- muts(G_mers,
locs = c(494,17713),
bases=c('C','T'))
R_mers <- digest_genome(SEQ=G_mers,enzymes = 'BglI',fragments=FALSE)
R_mers$virus <- "MERS"
R2 <- digest_genome(SEQ=G2,enzymes = 'BglI',fragments=FALSE)
R2$virus <- 'rMERS'
R3 <- rbind(R2,data.table('position'=c(4692,8811,12258,15470,18806,24397),
"Restriction_Enzyme"='BglI',
'genome_length'=nchar(G_mers),
'virus'='rMERS'))
R_mers
R2
R3
theme_set(theme_bw(base_size=15))
load('data/spike_alignment_workspace2.Rd')
# mapping tree tip-labels to accession numbers ----------------------------
CoV_Legend$Accession <- CoV_Legend$NCBI %>% strsplit('\\.') %>% sapply(getElement,1) %>% gsub("\\'",'',.) %>% gsub(' ','_',.)
BsaI <- lapply(CoV_Legend$Accession,digest_genome,enzymes='BsaI',fragments=FALSE) %>% rbindlist
BsmBI <- lapply(CoV_Legend$Accession,digest_genome,enzymes='Esp3I',fragments=FALSE) %>% rbindlist
BsSites <- rbind(BsaI,BsmBI)
BsSites[,rel_position:=position/genome_length]
cv=CoV_Legend
setkey(cv,Accession)
setkey(BsSites,Accession)
BsSites=BsSites[cv[,c('Accession','tip.label')]]
BsSites[,tip.label:=factor(tip.label,levels=tree$tip.label)]
g_bs=ggplot(BsSites,aes(tip.label,rel_position))+
geom_point(aes(color=Restriction_Enzyme),cex=2)+
geom_hline(yintercept = as.numeric(BsSites[grepl('SARS2',tip.label),rel_position]),lty=2)+
geom_vline(xintercept = as.numeric(BsSites[grepl('SARS2',tip.label),tip.label]),color='red')+
coord_flip()+
ggtitle('BsaI/BsmBI Sites: all CoVs')
g_bs
BsaI <- lapply(CoV_Legend$Accession,digest_genome,enzymes='BsaI',fragments=FALSE) %>% rbindlist
BsmBI <- lapply(CoV_Legend$Accession,digest_genome,enzymes='Esp3I',fragments=FALSE) %>% rbindlist
BsSites <- rbind(BsaI,BsmBI)
BsSites[,rel_position:=position/genome_length]
cv=CoV_Legend
setkey(cv,Accession)
setkey(BsSites,Accession)
BsSites=BsSites[cv[,c('Accession','tip.label')]]
BsSites[,tip.label:=factor(tip.label,levels=tree$tip.label)]
g_bs=ggplot(BsSites,aes(tip.label,rel_position))+
geom_point(aes(color=Restriction_Enzyme),cex=2)+
geom_hline(yintercept = as.numeric(BsSites[grepl('SARS2',tip.label),rel_position]),lty=2)+
geom_vline(xintercept = as.numeric(BsSites[grepl('SARS2',tip.label),tip.label]),color='red')+
coord_flip()+
ggtitle('BsaI/BsmBI Sites: all CoVs')
g_bs
BsSites
BsmBI <- lapply(CoV_Legend$Accession,digest_genome,enzymes='Esp3I',fragments=FALSE) %>% rbindlist
BsmBI <- lapply(CoV_Legend$Accession,digest_genome,enzymes='Esp31',fragments=FALSE) %>% rbindlist
grepl('Esp',names(RESTRICTION_ENZYMES))
grepl('Esp',names(RESTRICTION_ENZYMES)) %>% any
RESTRICTION_ENZYMES['BsmBI']
gg_color_hue(2)

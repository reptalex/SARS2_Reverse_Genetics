{
    "collab_server" : "",
    "contents" : "library(rentrez)\nlibrary(magrittr)\nlibrary(data.table)\n\n#ATG\n#TAG TAA TGA\nnearest_orf <- function(x,Strt,Stp,spike_min_length=3e3){\n  strts=gregexpr('ATG',x)[[1]] %>% sort\n  stps=c(gregexpr('TAG',x)[[1]],\n         gregexpr('TAA',x)[[1]],\n         gregexpr('TGA',x)[[1]]) %>% sort\n  \n  orfs <- expand.grid('a'=strts,'b'=stps) %>% as.data.table\n  orfs <- orfs[b>a]\n  orfs[,len:=b-a]\n  orfs <- orfs[len>spike_min_length]\n  orfs <- orfs[mod(len,3)==0]\n\n  orfs[,start_err:=abs(Strt-a)]\n  orfs[,stop_err:=abs(Stp-b)]\n  orfs[,tot_err:=start_err+stop_err]\n  \n  orfs=orfs[which.min(tot_err)]\n  \n  return(c('start'=orfs$a[1],'stop'=orfs$b[1]))\n}\n\nreferenceSeqs <- function(db='gene',gene='S',retmax=200){\n  ss <- entrez_search('gene',term=paste('(Coronaviridae[ORGN]) AND (',gene,'[GENE])',sep=''),\n                      retmax=retmax)\n  gg <- entrez_fetch('gene',id=ss$ids,rettype = 'fasta') %>% strsplit('\\n')\n  gg <- gg[[1]]\n  annotations <- gg[grepl('Annotation',gg)]\n  species <- gg[grepl('\\\\[',gg) & grepl('\\\\]',gg)]\n  species <- substr(species,regexpr('\\\\[',species),regexpr('\\\\]',species))\n  \n  species <- gsub('\\\\[','',species) %>% gsub('\\\\]','',.) %>% gsub('coronavirus','CoV',.)\n  \n  accn <- strsplit(annotations,' ') %>% sapply(getElement,3)\n  strtstp <- strsplit(annotations,' ') %>% sapply(getElement,4) %>%\n    sapply(FUN=function(s) substr(s,2,nchar(s)-1)) %>%\n    sapply(FUN=function(s) strsplit(s,'\\\\.\\\\.'))\n  starts <- as.numeric(sapply(strtstp,getElement,1))\n  stops <- as.numeric(sapply(strtstp,getElement,2))\n  \n  refSeqs <- data.frame('Species'=species,'Accession'=accn,\n                        'start'=starts,'stop'=stops,'seq'='',stringsAsFactors = F)\n  for (i in 1:length(species)){\n    ss <- entrez_search('gene',term=paste('(',accn[i],'[ACCN])',sep=''))\n    gg <- entrez_fetch('gene',id=ss$ids,rettype = 'fasta')\n    refSeqs$seq[i] <- substr(gg,regexpr('\\n',gg),nchar(gg)) %>% gsub('\\n','',x=.) %>% substr(starts[i]-1,stops[i]+1)\n  }\n  return(refSeqs)\n}\n\ndigest_genome <- function(accn=NULL,enzymes=c('BsaI','BsmBI'),\n                          fragments=TRUE,max_fragment=TRUE,SEQ=NULL){\n  \n  data(\"RESTRICTION_ENZYMES\")\n  res=sapply(enzymes,FUN=function(r,x) r[x],r=RESTRICTION_ENZYMES)\n  \n  filepath=paste0('data/fasta_files/genome_accn_',accn,'[accn].fasta')\n  if (is.null(SEQ)){\n    SEQ=read.FASTA(filepath) %>%\n      as.character %>% lapply(.,paste0,collapse=\"\") %>% unlist %>% DNAStringSet\n  }\n  \n  if (fragments){\n    d_both=DigestDNA(res,\n                     SEQ,\n                     type='fragments',\n                     strand='top')\n    dd=unlist(d_both)\n    \n    dum=data.table('Accession'=accn,\n                   'fragment_lengths'=dd@ranges@width,\n                   'Restriction_Enzyme'=paste(enzymes,collapse=' + '),\n                   'genome_length'=nchar(SEQ))\n    if (max_fragment){\n      dum <- dum[,list(Accession=accn[1],\n                       max_fragment_length=max(fragment_lengths),\n                       no_fragments=.N,\n                       Restriction_Enzyme=Restriction_Enzyme[1],\n                       genome_length=genome_length[1])]\n    }\n  } else {\n    d_both=DigestDNA(res,\n                     SEQ,\n                     type = 'positions',\n                     strand='top')\n    \n    dum=data.table('Accession'=accn,\n                   'position'=unlist(d_both),\n                   'Restriction_Enzyme'=paste(enzymes,collapse=' + '),\n                   'genome_length'=nchar(SEQ))\n  }\n  return(dum)\n}\ngg_color_hue <- function(n) {\n  hues = seq(15, 375, length = n + 1)\n  hcl(h = hues, l = 65, c = 100)[1:n]\n}\n\nget_genome <- function(accn){\n  accs <- rentrez::entrez_search('nucleotide',\n                                 term=accn)\n  if (length(accs$ids)!=0){\n    rentrez::entrez_search('genome',\n                           term=accn)\n    genome=entrez_fetch(db=\"nucleotide\", id=accs$ids, rettype=\"fasta\")\n    write(genome,file=paste0('data/fasta_files/genome_accn_',accn,'.fasta'))\n    genome <-read.FASTA(paste0('data/fasta_files/genome_accn_',accn,'.fasta')) %>%\n      as.character %>% lapply(.,paste0,collapse=\"\") %>% unlist %>% DNAStringSet\n  } else {\n    genome=NULL\n    warning(paste0('Accession ',accn,' not found'))\n  }\n  return(genome)\n}\nmut <- function(seq,loc,base){\n  Biostrings::subseq(seq,loc,loc) <- base\n  return(seq)\n}\n\nmuts <- function(seq,locs,bases){\n  if (length(locs)!=length(bases)){\n    stop('locs and bases must be same length')\n  }\n  for (i in 1:length(locs)){\n    seq <- mut(seq,locs[i],bases[i])\n  }\n  return(seq)\n}\n\nplot_map <- function(enzymes=c('BsaI','BsmBI'),highlight=NULL,\n                      CoV_Legend.=CoV_Legend,\n                      tree.=tree){\n  \n  BglI <- lapply(CoV_Legend$Accession,digest_genome,\n                 enzymes=enzymes,fragments=FALSE) %>% rbindlist\n  \n  BglI[,rel_position:=position/genome_length]\n  \n  cv=CoV_Legend\n  setkey(cv,Accession)\n  setkey(BglI,Accession)\n  BglI=BglI[cv[,c('Accession','tip.label')]]\n  \n  BglI[,tip.label:=factor(tip.label,levels=tree$tip.label)]\n  \n  ggplot(BglI,aes(tip.label,rel_position))+\n    geom_point(color='grey',cex=2)+\n    geom_point(data=BglI[tip.label==highlight],color='green',cex=4)+\n    coord_flip()+\n    ggtitle(paste0(enzymes,' Sites'))+\n    scale_color_manual(values=c(rep('black',4),'darkgrey'))+\n    scale_fill_manual(values=c(cls,'red',NA))+\n    scale_shape_manual(values=c(21,21,21,21,16))+\n    geom_hline(yintercept = BglI[tip.label==highlight]$rel_position,lty=2)+\n    scale_size_manual(values=c(4,4,4,4,2)) %>%\n    return\n}\n",
    "created" : 1664650835703.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1964352250",
    "id" : "4CDB331B",
    "lastKnownWriteTime" : 1665077316,
    "last_content_update" : 1665077447280,
    "path" : "~/COVID/Origins/RestrictionSites/SARS2_Reverse_Genetics/scripts/utils.R",
    "project_path" : "scripts/utils.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}
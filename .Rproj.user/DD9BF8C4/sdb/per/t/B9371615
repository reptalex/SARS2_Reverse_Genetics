{
    "collab_server" : "",
    "contents" : "library(ape)\nlibrary(data.table)\nlibrary(ggplot2)\nlibrary(magrittr)\nlibrary(xlsx)\nlibrary(rentrez)\nlibrary(DECIPHER)\nlibrary(ggpubr)\nsource('scripts/utils.R')\ntheme_set(theme_bw(base_size=15))\n\n\n# Data from CoV_phylogenetic_inference ------------------------------------\nCoV_Legend <- read.csv('data/CoV_genome_to_tree_legend.csv') %>% as.data.table\ntree <- read.tree('data/CoV_phylogeny_neat_tiplabs.nwk')\naccns <- CoV_Legend$Accession\ntips <- CoV_Legend$tip.label\nn=nrow(CoV_Legend)\n\n# Read & RE-Digest Genome -------------------------------------------------------------\ndata(\"RESTRICTION_ENZYMES\")\nbsai=RESTRICTION_ENZYMES['BsaI']\nbsmbi=RESTRICTION_ENZYMES['BsmBI']\n\n\nFragments <- NULL\n\nfor (i in 1:n){\n  frags=cov_digestion(accns[i],enzymes=c('BsaI','BsmBI'),tips[i])\n  Fragments=rbind(Fragments,frags)\n}\n\nwrite.csv(Fragments,'data/coronavirus_bsmbi_bsai_fragment_lengths.csv')\n\nre_names= names(RESTRICTION_ENZYMES)\nre_pairs <- expand.grid('a'=re_names,'b'=re_names) %>% as.data.table\nre_pairs <- re_pairs[a!=b]\n\n### we'll subsample 1K of these\nset.seed(1)\nix=sample(re_pairs[,.N],size=1e3,replace = F)\n\nre_prs=re_pairs[ix]\n\n# Repeat for all restriction enzymes, 1K pairs of enzymes, and all CoVs ---------------------------------\n# all_re_Fragments=NULL\n# for (i in 1:n){\n#   for (re in names(RESTRICTION_ENZYMES)){\n#     frag=cov_digestion(accns[i],re,tips[i])\n#     all_re_Fragments=rbind(all_re_Fragments,frag)\n#   }\n#   for (j in 1:nrow(re_prs)){\n#     enzymes <- c(re_prs$a[j],re_prs$b[j])\n#     frag=cov_digestion(accns[i],enzymes,tips[i])\n#     all_re_Fragments=rbind(all_re_Fragments,frag)\n#   }\n# }\n# \n# write.csv(all_re_Fragments,'data/coronavirus_all_re_fragments.csv')\nall_re_Fragments <- fread('data/coronavirus_all_re_fragments.csv')[,2:6]\n\n\n# Max Fragment Lengths ----------------------------------------------------------------\nmax_frags=Fragments[,list(max_fragment_length=max(fragment_lengths)/unique(genome_length),\n                          no_fragments=.N,\n                          genome_length=unique(genome_length)),by=c('tip.label','Restriction_Enzyme')]\nall_max_frags=all_re_Fragments[,list(max_fragment_length=max(fragment_lengths)/unique(genome_length),\n                                     no_fragments=.N,\n                                     genome_length=unique(genome_length)),by=c('tip.label','Restriction_Enzyme')]\n\n\nEngineered_CoVs <- read.csv('data/CoV Infectious Clones.csv') %>% as.data.table\nEngineered_CoVs[,species:=rVirus]\nEngineered_CoVs[,max_fragment_length:=max_fragment_length/genome_length]\n\n# Plotting ----------------------------------------------------------------\nspp=Engineered_CoVs$species\nEngineered_CoVs[,`Engineered CoV`:=factor(species,levels=spp)]\ncls <- gg_color_hue(nrow(Engineered_CoVs))\n\nideal <- data.table('no_fragments'=seq(4.4,8.6,length.out=100))[,max_fragment_length:=1/no_fragments]\n\n##### L(n) plot with engineered CoVs overlaid\ng_recomb=ggplot(all_max_frags[no_fragments<=30 & !grepl('SARS2',tip.label)],aes(no_fragments,max_fragment_length))+\n  geom_boxplot(aes(x=factor(no_fragments)),lwd=2,col='darkgrey')+\n  # geom_jitter(alpha=0.07)+  ### makes plot too busy\n  scale_x_discrete('Number of Fragments')+\n  scale_y_continuous(name='Length of Longest Fragment')+\n  geom_point(data=max_frags[tip.label=='SARS2-WHu1'],color='red',cex=7,pch=18)+\n  annotate(geom='segment',x=21.8,xend=6,y=.57,yend=.254,color='red',lwd=1.5)+\n  annotate(geom='text',x=24.5,y=.6,label='SARS-CoV-2',color='red',size=12)+\n  geom_jitter(data=Engineered_CoVs,aes(color=`Engineered CoV`),cex=5,pch=18)+\n  scale_color_manual(values=cls)+\n  ggtitle('SARS-CoV-2 + Known Reverse-Engineering Viruses')+\n  theme(legend.position=c(0.6,0.8))+\n  geom_line(data=ideal,col='darkred',lwd=1.5)+\n  annotate(geom='segment',x=4.4,xend=4.4,y=1/4.4,yend=9/30,lwd=1.5,col='darkred')+\n  annotate(geom='segment',x=8.6,xend=8.6,y=1/8.6,yend=9/30,lwd=1.5,col='darkred')+\n  annotate(geom='segment',x=4.4,xend=8.6,y=9/30,yend=9/30,lwd=1.5,col='darkred')+\n  geom_point(data=max_frags[tip.label=='SARS2-WHu1'],color='red',cex=7,pch=18)\n  \n  \ng_recomb\n\n########## z-scores\n\nS=rbind(all_max_frags[,c('tip.label','Restriction_Enzyme','max_fragment_length','no_fragments')],\n        max_frags[,c('tip.label','Restriction_Enzyme','max_fragment_length','no_fragments')])\nS[,mu:=mean(max_fragment_length,na.rm=T),by=no_fragments]\nS[,sd:=sd(max_fragment_length,na.rm=T),by=no_fragments]\nS[,q:=ecdf(max_fragment_length)(max_fragment_length),by=no_fragments]\nS[,z:=(mu-max_fragment_length)/sd]\n\n### fragments in the ideal range + 8 to include SL-CoV-WIV1\ns=S[no_fragments>=5 & no_fragments<=8,list(mu=mean(max_fragment_length,na.rm=T),\n          sd=sd(max_fragment_length,na.rm=T)),by=no_fragments]\n\n\n\nsetkey(s,no_fragments)\nsetkey(Engineered_CoVs,no_fragments)\nCoVs=s[Engineered_CoVs]  ### This has z-scores for engineered CoVs\n\nCoVs[,z:=(mu-max_fragment_length)/sd]\n\n\n########## RGS_Frags are all fragments that fall within the range of a reverse genetic system\nRGS_Frags=S[no_fragments>=5 & no_fragments<=8 & z>0][order(z,decreasing = T)]\nCoVs[,Virus:='Engineered']\nRGS_Frags[grepl('SARS2',tip.label) & Restriction_Enzyme=='GGTCTC(1/5) + CGTCTC(1/5)',Virus:='SARS-CoV-2 BsaI/BsmBI']\nRGS_Frags[is.na(Virus),Virus:='Other']\nRGS_Frags[,species:=tip.label]\nX <- rbind(CoVs[,c('species','z','Virus','max_fragment_length','no_fragments')],\n           RGS_Frags[species!='SARS2-WIV04',c('species','z','Virus','max_fragment_length','no_fragments')]) ## retain SARS2-WHu1\nX[species=='SARS2-WHu1',species:='SARS-CoV-2']\nX <- X[order(z,decreasing=T)]\nX[,rank:=1:.N]\nX[,Virus:=factor(Virus,levels=c('SARS-CoV-2 BsaI/BsmBI','Engineered','Other'))]\n\nxx=X[Virus!='Other']\nxx[,species:=factor(species,levels=c(spp,'SARS-CoV-2'))]\n\ng_z=ggplot(X,aes(rank,z))+\n  geom_point(cex=2,color='grey')+\n  geom_segment(stat='identity',data=xx,aes(y=0,yend=z,xend=rank,color=species))+\n  geom_point(data=xx,aes(color=species,fill=species),cex=4,pch=18)+\n  geom_segment(stat='identity',data=xx[species=='SARS-CoV-2'],aes(y=0,yend=z,xend=rank,color=species),lwd=2,alpha=0.2)+\n  geom_point(data=xx[species=='SARS-CoV-2'],aes(color=species,fill=species),cex=6)+\n  scale_color_manual(values=c(cls,'red'))+\n  scale_fill_manual(values=c(cls,'red'))+\n  theme(legend.position='none')+\n  ggtitle('Standard Deviations Below Average Max Fragment Length, 5-8 fragments')+\n  geom_segment(aes(x = 3500, y = 1.5, xend = 200, yend = 1.5),\n              arrow = arrow(length = unit(0.5, \"cm\")),lwd=2,color='darkred')+\n  annotate(geom='text',x=1500,y=1.7,label='More likely engineered',color='darkred',size=10)\n\n\nggarrange(g_recomb,g_z,nrow=2,labels = c('A','B'))\nggsave('figures/Restriction_fragment_max_length_analysis.png',height=11,width=14)\n\nsave(list=ls(),file='data/restriction_digest_workspace.Rds')\nsave(list=c('g_recomb','g_z'),file='data/restriction_digest_Ln_z_plots.Rds')\n\n\n# type IIs analysis -------------------------------------------------------\nType2Res <- c('BbsI','BfuAI','BspQI','PaqCI','SapI','BsaI','BsmBI','BglI')\nType2Res <- Type2Res[(Type2Res %in% names(RESTRICTION_ENZYMES))]\nnrs=length(Type2Res)\n\n### index table with all unique pairs (i,j) of type IIs restriction enzymes\nixs <- data.table('i'=rep(1:(nrs-1),times=c((nrs-1):1)))\nixs[,j:=(i+1):nrs,by=i]\nre2s <- data.table('a'=Type2Res[ixs$i],'b'=Type2Res[ixs$j])\n\nfrags_2s=NULL\nfor (i in 1:n){\n  for (re in Type2Res){\n    frag=cov_digestion(accns[i],re,tips[i])\n    frag$Restriction_Enzyme <- re\n    frags_2s=rbind(frags_2s,frag)\n  }\n  for (j in 1:nrow(re2s)){\n    enzymes <- as.character(c(re2s$a[j],re2s$b[j]))\n    frag=cov_digestion(accns[i],enzymes,tips[i])\n    frag$Restriction_Enzyme <- paste(enzymes,collapse=' + ')\n    frags_2s=rbind(frags_2s,frag)\n  }\n}\n\nfrags_2s <- frags_2s[,list(max_fragment_length=max(fragment_lengths)/genome_length[1],\n                           no_fragments=.N,\n                           genome_length=genome_length[1],\n                           accession=accession[1]),by=c('tip.label','Restriction_Enzyme')]\n\n\nrgs_specs <- S[no_fragments>=5 & no_fragments<=7,list(mu=mean(max_fragment_length,na.rm=T),\n                                                      sd=sd(max_fragment_length,na.rm=T)),by=no_fragments]\n\nsetkey(frags_2s,no_fragments)\nsetkey(rgs_specs,no_fragments)\nfrags_2s <- rgs_specs[frags_2s]\n\nfrags_2s <- frags_2s[!tip.label=='SARS2-WIV04']  ## don't double-count SARS2\n\nfrags_2s[,z:=(mu-max_fragment_length)/sd]\n\nfrags_2s[,.N]\n## 1491 total\nfrags_2s[which.max(z)]\n\n#    no_fragments        mu       sd  tip.label Restriction_Enzyme max_fragment_length genome_length accession        z\n# 1:            6 0.4284022 0.114201 SARS2-WHu1       BsaI + BsmBI           0.2534194         29903 NC_045512 1.532236\n\n\n### 1491 total type IIs digestions, SARS-CoV-2 has maximum z-score of all.\nfrags_2s[,species:=tip.label]\n\nZ <- rbind(frags_2s)\n\nfrags_2s <- frags_2s[order(z,decreasing = T)]\nfrags_2s[,rank:=1:.N]\n\n\ng_2s <- ggplot(frags_2s[!is.na(z)],aes(rank,z))+\n  geom_bar(stat='identity',fill='darkgrey',col='darkgrey',width=0.1)+\n  geom_point(color='darkgrey')+\n  geom_point(data=frags_2s[!is.na(z) & grepl('SARS2',tip.label) & Restriction_Enzyme=='BsaI + BsmBI'],cex=4,color='red')+\n  geom_bar(data=frags_2s[!is.na(z) & grepl('SARS2',tip.label) & Restriction_Enzyme=='BsaI + BsmBI'],stat='identity',\n           fill='red',color='red')+\n  ggtitle('All CoVs type IIs digestions generating 5-7 fragments')+\n  geom_hline(yintercept=0)\n\nsave(list=c('g_recomb','g_z','g_2s'),file='data/restriction_digest_plots.Rds')\n\n\n# Testing -----------------------------------------------------------------\n\n#### SARS2 BsaI/BsmBI site: what are the odds of such a small max_fragment_length if SARS2 had natural origin?\necdf(all_max_frags[no_fragments==6]$max_fragment_length)(max_frags[tip.label=='SARS2-WHu1',max_fragment_length])\n# P=0.01716937\n\n# Odds of RGS -------------------------------------------------------------\n\nall_max_frags[,sticky_end_length:=sticky_ends(Restriction_Enzyme),by=Restriction_Enzyme]\n\n#### SARS2 - what are the odds type IIs digestion having no_fragments\n#### within the ideal window for reverse-genetic-systems?\necdf(all_max_frags[sticky_end_length>=3]$no_fragments)(7)-\n  ecdf(all_max_frags[sticky_end_length>=3]$no_fragments)(5)\n# 0.1072531\n\n\ng_hist <- all_max_frags[sticky_end_length>=3 & !grepl('SARS2',tip.label) & (no_fragments<5 | no_fragments>7)] %>%\n  ggplot(aes(no_fragments))+\n  geom_histogram(fill=rgb(0,0,0,0.3),col='darkgrey',bins=93)+\n  geom_histogram(data=all_max_frags[sticky_end_length>=3 &\n                                      !grepl('SARS2',tip.label) &\n                                      no_fragments>=5 & \n                                      no_fragments<=7],\n                 color='steelblue',fill='steelblue',bins=93)+\n  geom_vline(xintercept = 6,lwd=2,col='red')+\n  scale_y_continuous('Count')+\n  annotate(geom='segment',x=6,y=72,xend=50,yend=60,color='red',lwd=2)+\n  annotate(geom='text',x=60,y=60,label='SARS-COV-2',color='red',size=12)+\n  annotate(geom='segment',x=7,y=60,xend=50,yend=48,color='steelblue',lwd=2)+\n  annotate(geom='text',x=62.8,y=48,label='Ideal RGS Range',color='steelblue',size=12)+\n  scale_x_continuous('Number of Fragments')+\n  ggtitle('SARS-CoV-2 BsaI/BsmBI in ideal range for RGS')\n",
    "created" : 1665689338318.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1141764565",
    "id" : "B9371615",
    "lastKnownWriteTime" : 1665689412,
    "last_content_update" : 1665689412295,
    "path" : "~/COVID/Origins/RestrictionSites/SARS2_Reverse_Genetics/scripts/2_CoV_restriction_mapping.R",
    "project_path" : "scripts/2_CoV_restriction_mapping.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}
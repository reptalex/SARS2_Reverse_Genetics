{
    "collab_server" : "",
    "contents" : "library(ape)\nlibrary(data.table)\nlibrary(ggplot2)\nlibrary(magrittr)\nlibrary(xlsx)\nlibrary(rentrez)\nlibrary(muscle)\nlibrary(DECIPHER)\nlibrary(ggpubr)\nlibrary(adegenet)\nsource('scripts/utils.R')\ntheme_set(theme_bw(base_size=15))\ndata(\"RESTRICTION_ENZYMES\")\nCoV_Legend <- read.csv('data/CoV_genome_to_tree_legend.csv') %>% as.data.table\ncls <- viridis::viridis(3)\n\n# Load genomes ------------------------------------------------------------\n\n\nfilepath=paste0('data/fasta_files/genome_accn_',CoV_Legend[tip.label=='SARS2-WHu1',Accession],'[accn].fasta')\nSARS2=read.FASTA(filepath) %>%\n  as.character %>% lapply(.,paste0,collapse=\"\") %>% unlist %>% DNAStringSet\n\nfilepath=paste0('data/fasta_files/genome_accn_',CoV_Legend[tip.label=='RaTG13',Accession],'[accn].fasta')\nRaTG13=read.FASTA(filepath) %>%\n  as.character %>% lapply(.,paste0,collapse=\"\") %>% unlist %>% DNAStringSet\n\nfilepath=paste0('data/fasta_files/genome_accn_',CoV_Legend[tip.label=='BANAL-52',Accession],'[accn].fasta')\nBANAL52=read.FASTA(filepath) %>%\n  as.character %>% lapply(.,paste0,collapse=\"\") %>% unlist %>% DNAStringSet\n\n\nSEQs <- c(SARS2,RaTG13,BANAL52)\n\n# Align genomes -----------------------------------------------------------\n\nmusc <- muscle(SEQs)\n\nmusc_sars <- musc@unmasked[[\"NC_045512.2 Severe acute respiratory syndrome coronavirus 2 isolate Wuhan-Hu-1, complete genome\"]]\nmusc_rat  <- musc@unmasked[[\"MN996532.2 Bat coronavirus RaTG13, complete genome\" ]]\nmusc_banal <- musc@unmasked[[\"MZ937000.1 Bat coronavirus isolate BANAL-20-52/Laos/2020, complete genome\"]]\n\nX <- as.DNAbin(musc)\n\nMutations <- findMutations(X)\nnames(Mutations)\n\n# [1] \"NC_045512.2 Severe acute respiratory syndrome coronavirus 2 isolate Wuhan-Hu-1, complete genome->MN996532.2 Bat coronavirus RaTG13, complete genome\"                       \n# [2] \"NC_045512.2 Severe acute respiratory syndrome coronavirus 2 isolate Wuhan-Hu-1, complete genome->MZ937000.1 Bat coronavirus isolate BANAL-20-52/Laos/2020, complete genome\"\n# [3] \"MN996532.2 Bat coronavirus RaTG13, complete genome->NC_045512.2 Severe acute respiratory syndrome coronavirus 2 isolate Wuhan-Hu-1, complete genome\"                       \n# [4] \"MN996532.2 Bat coronavirus RaTG13, complete genome->MZ937000.1 Bat coronavirus isolate BANAL-20-52/Laos/2020, complete genome\"                                             \n# [5] \"MZ937000.1 Bat coronavirus isolate BANAL-20-52/Laos/2020, complete genome->NC_045512.2 Severe acute respiratory syndrome coronavirus 2 isolate Wuhan-Hu-1, complete genome\"\n# [6] \"MZ937000.1 Bat coronavirus isolate BANAL-20-52/Laos/2020, complete genome->MN996532.2 Bat coronavirus RaTG13, complete genome\"  \n\nDists <- lapply(Mutations[c(3,5)],getElement,'short') %>% sapply(length)\n\n##1135 mutations RaTG13-->SARS2\n## 903 mutations BANAL52-->SARS2\n\nsave(list=ls(),file='data/close_relative_alignments.Rds')\n\n# Mutations -------------------------------------------------------\nRaTsites <- Mutations[[3]]$short %>% strsplit(':') %>% sapply(getElement,1) %>% as.numeric\nBANALsites <- Mutations[[5]]$short %>% strsplit(':') %>% sapply(getElement,1) %>% as.numeric\n\n### Classify these as S/N\nORFs <- read.csv('data/CoV_ORFs.csv') %>% as.data.table\ncolnames(ORFs)[1] <- 'Virus'\n\nM_rat <- classify_mutations(Mutations[[3]],ORFs[Virus=='RaTG13'],seq=musc_rat,sars2=musc_sars)\nM_ban <- classify_mutations(Mutations[[5]],ORFs[Virus=='BANAL52'],seq=musc_banal,sars2=musc_sars)\nM <- rbind(M_rat,M_ban) ### Note: some rows can be duplicates in some analyses as GCT-->GTC will have rows for C-->T and T-->C\n\nggplot(M[silent==TRUE],aes(site))+\n  stat_ecdf(aes(color=Virus),lwd=2)+\n  scale_x_continuous('Genome Position')+\n  scale_y_continuous('F(x)')+\n  ggtitle('Cumulative Proportion of Silent Mutations')+\n  theme(legend.position=c(0.8,0.3))+\n  geom_vline(xintercept = unlist(ORFs[Virus=='SARS-CoV-2' & ORF=='S',c('start','stop')]))\n\n\n# Silent Mutations & Overhangs ------------------------------------------------\n\nPos <- rbind(bsai_sites(musc@unmasked[[1]],Virus='SARS2'),\n             bsmbi_sites(musc@unmasked[[1]],Virus='SARS2'),\n             bsai_sites(musc@unmasked[[2]],Virus='RaTG13'),\n             bsmbi_sites(musc@unmasked[[2]],Virus='RaTG13'),\n             bsai_sites(musc@unmasked[[3]],Virus='BANAL52'),\n             bsmbi_sites(musc@unmasked[[3]],Virus='BANAL52'))\n# #BsaI\n# \n# 'CTCTGG'   - sticky end -1:-5\n# 'GAGACC'   - this is the strand found in our genomes\n# \n# #BsmBI\n# 'CTCTGC'\n# 'GAGACG'\n\nPos[Virus=='SARS2',overhang:=overhangs(musc@unmasked[[1]],position),by=position]\nPos[Virus=='RaTG13',overhang:=overhangs(musc@unmasked[[2]],position),by=position]\nPos[Virus=='BANAL52',overhang:=overhangs(musc@unmasked[[3]],position),by=position]\n\n\nREsites=Pos[,list(tots=position+0:5),by=position]$tots %>% unique\n\nM[,list(silent_mut_rate=sum(silent,na.rm=T)/.N),by=Virus]\n#      Virus silent_mut_rate\n# 1:  RaTG13       0.7918512\n# 2: BANAL52       0.8403548\n\nM[site %in% REsites]\n\n#     site from to ORF   Virus start  stop codon_start codon_stop old_codon new_codon silent\n# 1:   2197    t  c  1a  RaTG13   266 13480        2195       2197       GAT       GAC   TRUE\n# 2:   9751    a  g  1a  RaTG13   266 13480        9749       9751       AAA       AAG   TRUE\n# 3:   9754    g  a  1a  RaTG13   266 13480        9752       9754       AGG       AGA   TRUE\n# 4:  10447    a  g  1a  RaTG13   266 13480       10445      10447       AGA       AGG   TRUE\n# 5:  11650    t  c  1a  RaTG13   266 13480       11648      11650       GGT       GGC   TRUE\n# 6:  22922    c  a   S  RaTG13 21533 25369       22922      22924       CGT       AGA   TRUE\n# 7:  22924    t  a   S  RaTG13 21533 25369       22922      22924       CGT       AGA   TRUE\n# 8:  22925    c  t   S  RaTG13 21533 25369       22925      22927       CTC       TTG   TRUE\n# 9:  22927    c  g   S  RaTG13 21533 25369       22925      22927       CTC       TTG   TRUE\n# 10: 24103    g  a   S  RaTG13 21533 25369       24101      24103       AGG       AGA   TRUE\n# 11: 24106    t  c   S  RaTG13 21533 25369       24104      24106       GAT       GAC   TRUE\n# 12: 24514    c  t   S  RaTG13 21533 25369       24512      24514       CTC       CTT   TRUE\n# 13: 10447    a  g  1a BANAL52   242 13432       10445      10447       AGA       AGG   TRUE\n# 14: 11650    t  c  1a BANAL52   242 13432       11648      11650       GGT       GGC   TRUE\n# 15: 17334    a  g  1b BANAL52 13717 21504       17332      17334       ACA       ACG   TRUE\n# 16: 17976    t  c  1b BANAL52 13717 21504       17974      17976       GAT       GAC   TRUE\n# 17: 24106    t  c   S BANAL52 21485 25321       24104      24106       GAT       GAC   TRUE\n\n## 12 silent mutations in RaTG13, 4 in BANAl52.\n\n### Fisher Test of Silent Mutations within BsaI/BsmBI sites\n## number of nt's within BB sites\nBB_sites_RaTG13 <- Pos[Virus %in% c('SARS2','RaTG13'),length(unique(position))]*6 \nBB_Smuts_RaTG13 <- M[site %in% REsites & Virus=='RaTG13',.N]\nSMuts_RaTG13 <- M[Virus==\"RaTG13\",sum(silent)]-BB_Smuts_RaTG13\nRaTG13_genome_nonBB <- nchar(RaTG13)-BB_sites_RaTG13\n\nA_RaTG13 <- matrix(c(BB_Smuts_RaTG13,BB_sites_RaTG13-BB_Smuts_RaTG13,\n                     SMuts_RaTG13,RaTG13_genome_nonBB-SMuts_RaTG13),nrow=2,byrow = T)\nfisher.test(A_RaTG13)\n# Fisher's Exact Test for Count Data\n# \n# data:  A_RaTG13\n# p-value = 5.211e-08\n# alternative hypothesis: true odds ratio is not equal to 1\n# 95 percent confidence interval:\n#   4.472405 18.197036\n# sample estimates:\n# odds ratio \n#   9.365937 \n\nBB_sites_BANAL52 <- Pos[Virus %in% c('SARS2','BANAL52'),length(unique(position))]*6 \nBB_Smuts_BANAL52 <- M[site %in% REsites & Virus=='BANAL52',.N]\nSMuts_BANAL52 <- M[Virus==\"BANAL52\",sum(silent,na.rm=T)]-BB_Smuts_BANAL52\nBANAL52_genome_nonBB <- nchar(BANAL52)-BB_sites_BANAL52\n\nA_BANAL52 <- matrix(c(BB_Smuts_BANAL52,BB_sites_BANAL52-BB_Smuts_BANAL52,\n                     SMuts_BANAL52,BANAL52_genome_nonBB-SMuts_BANAL52),nrow=2,byrow = T)\nfisher.test(A_BANAL52)\n\n# Fisher's Exact Test for Count Data\n# \n# data:  A_BANAL52\n# p-value = 0.004082\n# alternative hypothesis: true odds ratio is not equal to 1\n# 95 percent confidence interval:\n#   1.594238 13.340336\n# sample estimates:\n# odds ratio \n#   5.211366 \n\n\n\n# digestion ---------------------------------------------------------------\n\nR <- RESTRICTION_ENZYMES\n\nbsai <- R['BsaI']\nbsmbi <- R['BsmBI']\nbgli <- R['BglI']\n\nSARS_RES <- rbind(digest_genome(\"NC_045512\",enzymes = 'BsaI',fragments=F),\n                  digest_genome(\"NC_045512\",enzymes = 'BsmBI',fragments=F),\n                  digest_genome(\"NC_045512\",enzymes = 'BglI',fragments=F))\n\n\nSARS_RES <- digest_genome(SEQ=SARS2)\nRAT_RES <- digest_genome(SEQ=RaTG13)\nBAN_RES <- digest_genome(SEQ=BANAL52)\n\nRES <- rbind(SARS_RES,RAT_RES,BAN_RES)\nRES[,max_fragment_length:=max_fragment_length/genome_length]\nRES$virus <- c('SARS-CoV-2','RaTG13','BANAL52')\nprobs=base.freq(X)\n\n# Mutation Analysis -------------------------------------------------------\n### Takes a long time\n# MUT_RaTG13 <- mutate_digest(RaTG13,mutations=Dists[1],reps=1e5,ncores = 7)\n# MUT_RaTG13$virus <- 'RaTG13'\n# MUT_RaTG13[,max_fragment_length:=max_fragment_length/genome_length]\n# MUT_BANAL52 <- mutate_digest(BANAL52,mutations=Dists[2],reps=1e5,ncores = 7)\n# MUT_BANAL52$virus <- 'BANAL52'\n# MUT_BANAL52[,max_fragment_length:=max_fragment_length/genome_length]\n# save(list=ls(),file='data/mutation_analysis_workspace.Rds')\n\nload('data/mutation_analysis_workspace.Rds')\n\n# Plotting ----------------------------------------------------------------\nload('data/restriction_digest_workspace.Rds')\nSARS_RES$virus <- 'SARS-CoV-2'\nSARS_RES[,max_fragment_length:=max_fragment_length/genome_length]\nMUT <- rbind(SARS_RES[,c('max_fragment_length','no_fragments','virus')],\n             MUT_BANAL52[,c('max_fragment_length','no_fragments','virus')],\n             MUT_RaTG13[,c('max_fragment_length','no_fragments','virus')])\n\ng_mut=ggplot(all_max_frags[no_fragments<=12 & !grepl('SARS2',tip.label)],\n            aes(factor(no_fragments),max_fragment_length))+\n  geom_boxplot(lwd=2,col='darkgrey')+\n  scale_x_discrete('Number of Fragments')+\n  scale_y_continuous('Length of Longest Fragment')+\n  geom_jitter(data=MUT[virus!='SARS-CoV-2' & no_fragments<=12],\n              aes(color=virus),cex=0.3,alpha=0.2)+\n  geom_point(data=RES,aes(color=virus),cex=6)+\n  geom_point(data=RES,cex=6,pch=21)+\n  scale_color_manual(values=c('darkolivegreen','darkorchid1','red'))+\n  theme(legend.position=c(.8,.8))+\n  ggtitle('Assembly of Mutants')\ng_mut\nggsave('figures/mutation_analysis.png',height=10,width=15)\n\n\n\n# dZ ----------------------------------------------------------------------\n\nref=all_max_frags[no_fragments<=12,list(mn=mean(max_fragment_length),\n                    sd=sd(max_fragment_length)),by=no_fragments]\n\n\nsetkey(ref,no_fragments)\nsetkey(MUT,no_fragments)\nY=ref[MUT]\n\nY[,z:=(mn-max_fragment_length)/sd]\n\nsetkey(RES,no_fragments)\nyy=ref[RES]\nyy[,initial_z:=(mn-max_fragment_length)/sd]\nsetkey(yy,virus)\nsetkey(Y,virus)\nY=Y[yy[,c('virus','initial_z')]]\n\nY[,dz:=z-initial_z]\n\ndum<- data.table('virus'=c('RaTG13','BANAL52'))\ndum$dz <- yy[match(dum$virus,virus)]$z-yy[virus=='SARS-CoV-2']$initial_z\n\ng_dz=ggplot(Y[virus!='SARS-CoV-2'],aes(dz))+\n  geom_histogram(aes(fill=virus),position='identity')+\n  facet_wrap(.~virus,nrow=2)+\n  geom_vline(data=dum,aes(xintercept=dz),color='red',lwd=2)+\n  scale_fill_manual(values=c('darkolivegreen','darkorchid1'))+\n  theme(legend.position='none')\n\nggarrange(g_mut,g_dz,widths=c(2,1),align='h',labels=c('A','B'))\nggsave('figures/mutation_analysis_and_dz.png',height=8,width=16)\n\n\n\n# Statistics --------------------------------------------------------------\n\nsars_2_z <- 1.5338862\n### What is the probability of seeing no_fragments in the desired range AND z>=sars_2_z?\n\npvals=Y[virus!='SARS-CoV-2',list(P=sum(no_fragments>=5 & no_fragments<=7 & z>=sars_2_z)/.N),by=virus]\n#      virus       P\n# 1: BANAL52 0.00150\n# 2:  RaTG13 0.01154\n\n\nall_max_frags[,sticky_end_length:=sticky_ends(Restriction_Enzyme),by=Restriction_Enzyme]\n\n### How many CoVs can be made as infectious clones?\n\nall_max_frags[,z:=(mean(max_fragment_length)-max_fragment_length)/sd(max_fragment_length),by=no_fragments]\n\nall_max_frags[sticky_end_length>=3 & no_fragments>=5 & no_fragments<=7][order(z,decreasing = T)][1:5]\n#        tip.label Restriction_Enzyme max_fragment_length no_fragments genome_length sticky_end_length        z\n# 1: Bat-Alpha-CoV        GGTCTC(1/5)           0.2961106            5         28128                 4 1.403368\n# 2:  Bat-CoV-unid      GCGATG(10/14)           0.2716825            6         28975                 4 1.373955\n# 3:         HKU17        GGTCTC(1/5)           0.2369743            7         26083                 4 1.364690\n# 4:     HKU12-600      GCGATG(10/14)           0.3134945            5         26396                 4 1.272347\n# 5:          HKU8      GCGATG(10/14)           0.2872832            6         28773                 4 1.237337\n\n# \n# g_hist <- all_max_frags[sticky_end_length>=3 & !grepl('SARS2',tip.label) & (no_fragments<5 | no_fragments>7)] %>%\n#   ggplot(aes(no_fragments))+\n#   geom_histogram(fill=rgb(0,0,0,0.3),col='darkgrey',bins=93)+\n#   geom_histogram(data=all_max_frags[sticky_end_length>=3 &\n#                                       !grepl('SARS2',tip.label) &\n#                                       no_fragments>=5 & \n#                                       no_fragments<=7],\n#                  color='steelblue',fill='steelblue',bins=93)+\n#   geom_vline(xintercept = 6,lwd=2,col='red')+\n#   scale_y_continuous('Count')+\n#   annotate(geom='segment',x=6,y=72,xend=50,yend=60,color='red',lwd=2)+\n#   annotate(geom='text',x=60,y=60,label='SARS-COV-2',color='red',size=12)+\n#   annotate(geom='segment',x=7,y=60,xend=50,yend=48,color='steelblue',lwd=2)+\n#   annotate(geom='text',x=62.8,y=48,label='Ideal RGS Range',color='steelblue',size=12)+\n#   scale_x_continuous('Number of Fragments')+\n#   ggtitle('SARS-CoV-2 BsaI/BsmBI in ideal range for RGS')\n# \n# \n# ggarrange(g_mut,ggarrange(g_dz,g_hist,nrow=2,heights=c(2,1)),widths=c(2,1))\n# ggsave('figures/mutation_analysis_fig_3.png',height=8,width=12)",
    "created" : 1665609346088.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3599268936",
    "id" : "BAAA746",
    "lastKnownWriteTime" : 1665670931,
    "last_content_update" : 1665670931264,
    "path" : "~/COVID/Origins/RestrictionSites/SARS2_Reverse_Genetics/scripts/5_mutation_analysis.R",
    "project_path" : "scripts/5_mutation_analysis.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}
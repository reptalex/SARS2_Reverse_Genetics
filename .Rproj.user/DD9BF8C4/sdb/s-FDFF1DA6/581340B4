{
    "collab_server" : "",
    "contents" : "library(ape)\nlibrary(data.table)\nlibrary(ggplot2)\nlibrary(magrittr)\nlibrary(xlsx)\nlibrary(rentrez)\nlibrary(DECIPHER)\nlibrary(ggpubr)\ntheme_set(theme_bw(base_size=15))\n\n\n# Download genomes & write to file ----------------------------------------\n\nseqs <- read.xlsx('data/coronavirus_accession_nos.xlsx',sheetIndex = 1)\nseqs$gene <- gsub('/','_',seqs$gene)\nterms <- paste0(seqs$accession,'[ACCN]')\n\nfor (i in 1:nrow(seqs)){\n  accs <- rentrez::entrez_search('nucleotide',\n                term=terms[i])\n  seq=entrez_fetch(db=\"nucleotide\", id=accs$ids, rettype=\"fasta\")\n  write(seq,file=paste0('data/fasta_files/gene_',seqs$gene[i],'_accn_',seqs$accession[i],'.fasta'))\n}\n\n# Read & RE-Digest Genome -------------------------------------------------------------\ndata(\"RESTRICTION_ENZYMES\")\nbsai=RESTRICTION_ENZYMES['BsaI']\nbsmbi=RESTRICTION_ENZYMES['BsmBI']\n\n\nFragments <- NULL\n\nfor (i in 1:nrow(seqs)){\n  filepath=paste0('data/fasta_files/gene_',seqs$gene[i],\n                  '_accn_',seqs$accession[i],'.fasta')\n  SEQ=read.FASTA(filepath) %>%\n    as.character %>% lapply(.,paste0,collapse=\"\") %>% unlist %>% DNAStringSet\n  \n  seqs$genome_length[i]=nchar(SEQ)\n  \n  d_both=DigestDNA(c(bsai,bsmbi),\n                   SEQ,\n                   type='fragments',\n                   strand='top')\n  dd=unlist(d_both)\n  \n  dum=data.table('gene'=seqs$gene[i],'accession'=seqs$accession[i],\n                 'fragment_lengths'=dd@ranges@width,\n                 'Restriction_Enzyme'='BsaI + BsmBI',\n                 'genome_length'=nchar(SEQ))\n  Fragments=rbind(Fragments,dum)\n}\n\nwrite.csv(Fragments,'data/coronavirus_bsmbi_bsai_fragment_lengths.csv')\n\nre_names= names(RESTRICTION_ENZYMES)\nre_pairs <- expand.grid('a'=re_names,'b'=re_names) %>% as.data.table\nre_pairs <- re_pairs[a!=b]\n\n### we'll subsample 1K of these\nset.seed(1)\nix=sample(re_pairs[,.N],size=1e3,replace = F)\n\nre_prs=re_pairs[ix]\n\n# Repeat for all restriction enzymes x CoVs ---------------------------------\n\nall_re_Fragments=NULL\nfor (i in 1:nrow(seqs)){\n  filepath=paste0('data/fasta_files/gene_',seqs$gene[i],\n                  '_accn_',seqs$accession[i],'.fasta')\n  SEQ=read.FASTA(filepath) %>%\n    as.character %>% lapply(.,paste0,collapse=\"\") %>% unlist %>% DNAStringSet\n  \n  for (re in names(RESTRICTION_ENZYMES)){\n    re_site=RESTRICTION_ENZYMES[re]\n    d=DigestDNA(re_site,\n                     SEQ,\n                     type='fragments',\n                     strand='top')\n    dd=unlist(d)\n    \n    dum=data.table('gene'=seqs$gene[i],'accession'=seqs$accession[i],\n                   'fragment_lengths'=dd@ranges@width,\n                   'Restriction_Enzyme'=re,\n                   'genome_length'=nchar(SEQ))\n    all_re_Fragments=rbind(all_re_Fragments,dum)\n  }\n  \n  for (j in 1:nrow(re_prs)){\n    re_1=RESTRICTION_ENZYMES[re_prs[j,a]]\n    re_2=RESTRICTION_ENZYMES[re_prs[j,b]]\n    d=DigestDNA(c(re_1,re_2),\n                SEQ,\n                type='fragments',\n                strand='top')\n    dd=unlist(d)\n    \n    dum=data.table('gene'=seqs$gene[i],'accession'=seqs$accession[i],\n                   'fragment_lengths'=dd@ranges@width,\n                   'Restriction_Enzyme'=paste0(re_1,' + ',re_2),\n                   'genome_length'=nchar(SEQ))\n    all_re_Fragments=rbind(all_re_Fragments,dum)\n  }\n  \n}\n\nwrite.csv(all_re_Fragments,'data/coronavirus_all_re_fragments.csv')\n\nall_max_frags[gene=='SARS2' & no_fragments>=5 & no_fragments<=7][order(max_fragment_length)]\n\n# plotting ----------------------------------------------------------------\nmax_frags=Fragments[,list(max_fragment_length=max(fragment_lengths)/unique(genome_length),\n                          no_fragments=.N,\n                          genome_length=unique(genome_length)),by=c('gene','Restriction_Enzyme')]\nall_max_frags=all_re_Fragments[,list(max_fragment_length=max(fragment_lengths)/unique(genome_length),\n                                     no_fragments=.N,\n                                     genome_length=unique(genome_length)),by=c('gene','Restriction_Enzyme')]\n\nCoV_sequences <- data.table('species'=c('SL-CoV WIV1',\n                                        'SARS-CoV Urban','MERS-CoV',\n                                        'Bat-SCov','SARS-CoV_Becker','pBAC-SARS-CoVFL'),\n                            'no_fragments'=c(8,6,7,7,6,7),\n                            'max_fragment_length'=c(5450,6853,5717,\n                                                    6854,6854,7640)/3e4)\n\ng_null <- ggplot(all_max_frags[no_fragments<=30 & gene!='SARS2'],\n                 aes(factor(no_fragments),max_fragment_length))+\n  geom_boxplot()+\n  geom_jitter(alpha=0.07)+\n  scale_x_discrete('Number of Fragments')+\n  scale_y_continuous('Maximum Fragment Length')+\n  ggtitle('Maximum restriction fragment lengths for CoVs')\n\n\ng_Sars2=ggplot(all_max_frags[no_fragments<=30 & gene!='SARS2'],\n               aes(factor(no_fragments),max_fragment_length))+\n  geom_boxplot()+\n  geom_jitter(alpha=0.07)+\n  scale_x_discrete('Number of Fragments')+\n  scale_y_continuous(name=NULL)+\n  geom_point(data=max_frags[gene=='SARS2'],color='red',cex=5)+\n  annotate(geom='segment',x=25,xend=6,y=15e3,yend=7574,color='red')+\n  annotate(geom='text',x=25,y=15.5e3,label='SARS-CoV-2',color='red')+\n  ggtitle('SARS-CoV-2')\n\nspp=CoV_sequences$species\nCoV_sequences[,`Engineered CoV`:=factor(species,levels=spp)]\ngg_color_hue <- function(n) {\n  hues = seq(15, 375, length = n + 1)\n  hcl(h = hues, l = 65, c = 100)[1:n]\n}\ncls <- gg_color_hue(nrow(CoV_sequences))\n\ng_recomb=ggplot(all_max_frags[no_fragments<=30 & gene!='SARS2'],aes(factor(no_fragments),max_fragment_length))+\n  geom_boxplot()+\n  geom_jitter(alpha=0.07)+\n  scale_x_discrete('Number of Fragments')+\n  scale_y_continuous(name='Length of Longest Fragment')+\n  geom_point(data=max_frags[gene=='SARS2'],color='red',cex=5)+\n  annotate(geom='segment',x=21.8,xend=6,y=.57,yend=.25,color='red',lwd=1.5)+\n  annotate(geom='text',x=24.5,y=.6,label='SARS-CoV-2',color='red',size=12)+\n  geom_jitter(data=CoV_sequences,aes(color=`Engineered CoV`),cex=5)+\n  scale_color_manual(values=cls)+\n  ggtitle('SARS-CoV-2 + Known Reverse-Engineering Viruses')+\n  theme(legend.position=c(0.6,0.7))\n\n\n# ggarrange(g_null,g_Sars2,g_recomb,ncol=3)\n\ng_recomb\n\nS=rbind(all_max_frags[,c('gene','Restriction_Enzyme','max_fragment_length','no_fragments')],\n        max_frags[,c('gene','Restriction_Enzyme','max_fragment_length','no_fragments')])\nS[,mu:=mean(max_fragment_length,na.rm=T),by=no_fragments]\nS[,sd:=sd(max_fragment_length,na.rm=T),by=no_fragments]\nS[,z:=(mu-max_fragment_length)/sd]\n\ns=S[no_fragments>=5 & no_fragments<=8,list(mu=mean(max_fragment_length,na.rm=T),\n          sd=sd(max_fragment_length,na.rm=T)),by=no_fragments]\n\n\n\nsetkey(s,no_fragments)\nsetkey(CoV_sequences,no_fragments)\nCoVs=s[CoV_sequences]\n\nCoVs[,z:=(mu-max_fragment_length)/sd]\nAllRes=S[no_fragments>=5 & no_fragments<=8 & z>0][order(z,decreasing = T)]\n\nCoVs[,Virus:='Engineered']\nAllRes[gene=='SARS2' & Restriction_Enzyme=='BsaI + BsmBI',Virus:='SARS-CoV-2 BsaI/BsmBI']\nAllRes[is.na(Virus),Virus:='Other']\nAllRes[,species:=gene]\nX <- rbind(CoVs[,c('species','z','Virus','max_fragment_length','no_fragments')],\n           AllRes[,c('species','z','Virus','max_fragment_length','no_fragments')])\nX[Virus=='SARS-CoV-2 BsaI/BsmBI',species:='SARS-CoV-2']\nX <- X[order(z,decreasing=T)]\nX[,rank:=1:.N]\nX[,Virus:=factor(Virus,levels=c('SARS-CoV-2 BsaI/BsmBI','Engineered','Other'))]\n\nxx=X[Virus!='Other']\nxx[,species:=factor(species,levels=c(spp,'SARS-CoV-2'))]\n\ng_z=ggplot(X,aes(rank,z))+\n  geom_point(cex=2,color='grey')+\n  geom_segment(stat='identity',data=xx,aes(y=0,yend=z,xend=rank,color=species))+\n  geom_point(data=xx,aes(color=species,fill=species),cex=4)+\n  geom_segment(stat='identity',data=xx[species=='SARS-CoV-2'],aes(y=0,yend=z,xend=rank,color=species),lwd=2)+\n  geom_point(data=xx[species=='SARS-CoV-2'],aes(color=species,fill=species),cex=6)+\n  scale_color_manual(values=c(cls,'red'))+\n  scale_fill_manual(values=c(cls,'red'))+\n  theme(legend.position='none')+\n  ggtitle('Standard Deviations Below Average Max Fragment Length, 5-8 fragments')+\n  geom_segment(aes(x = 1500, y = 1.5, xend = 100, yend = 1.5),\n              arrow = arrow(length = unit(0.5, \"cm\")),lwd=2,color='darkred')+\n  annotate(geom='text',x=800,y=1.7,label='More likely engineered',color='darkred',size=10)\n\n\nggarrange(g_recomb,g_z,nrow=2,labels = c('A','B'))\nggsave('figures/Restriction_fragment_max_length_analysis.png',height=11,width=14)\n\n# saving ------------------------------------------------------------------\n\nsave(list=ls(),file='data/CoV_restriction_mapping_workspace.Rd')\n\n\n# Testing -----------------------------------------------------------------\n\n#### SARS2 BsaI/BsmBI site\necdf(all_max_frags[no_fragments==6]$max_fragment_length)(max_frags[gene=='SARS2',max_fragment_length])\n# P=0.01016949\n\n### SARS2 SacI\nSars2_SacI=all_max_frags[no_fragments==2 & gene=='SARS2' & Restriction_Enzyme=='SacI']$max_fragment_length\necdf(all_max_frags[no_fragments==2]$max_fragment_length)(Sars2_SacI)\n# P=0.01214575\n\nmax_frags[no_fragments==6]\n#            gene Restriction_Enzyme max_fragment_length no_fragments\n# 1:        SARS2       BsaI + BsmBI                7578            6\n# 2: BANAL-20-103       BsaI + BsmBI               10638            6\n# 3:        WIV04       BsaI + BsmBI                7578            6\n\nall_max_frags[no_fragments==6 & max_fragment_length<=7578]\n#    gene Restriction_Enzyme max_fragment_length no_fragments\n# 1: WIV1              BsaHI                7541            6\n# 2: HKU1               PciI                6986            6\n\n### Baric inserted \nall_max_frags[Restriction_Enzyme=='SacI' & no_fragments==2]\n# gene Restriction_Enzyme max_fragment_length no_fragments\n# 1:            SARS2               SacI               15102            2\n# 2:      BANAL-20-52               SacI               15051            2\n# 3:     BANAL-20-103               SacI               15037            2\n# 4:     BANAL-20-116               SacI               14863            2\n# 5:     BANAL-20-247               SacI               15058            2\n# 6:            WIV04               SacI               15102            2\n# 7:             229E               SacI               25622            2\n# 8:             HKU9               SacI               21756            2\n# 9: TGEV Purdue P115               SacI               14622            2\n\n############ Top-N restriction site testing\n\nS[,P:=ecdf(AllRes$max_fragment_length)(max_fragment_length),by=no_fragments]\n\nS[no_fragments==2,fragment_category:='Singleton']\nS[no_fragments>=5 & no_fragments<=8,fragment_category:='RGS']\n\nS[!is.na(fragment_category) & !is.infinite(P),\n  list(prodP=prod(min(P[fragment_category=='Singleton'],na.rm=T),\n                  min(P[fragment_category=='RGS']),na.rm=T)),by=gene][order(prodP)]\n\n\nAllRes=AllRes[order(P,decreasing=F)]\nCombinedPvals=NULL\nfor (n in 1:5){\n  CombinedPvals=rbind(CombinedPvals,\n                      AllRes[,list(score=-sum(log(P[1:n])),\n                                   n=n),by=species])\n}\n\nCombinedPvals\n\nggplot(CombinedPvals,aes(spec))",
    "created" : 1664650328534.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3778425567",
    "id" : "581340B4",
    "lastKnownWriteTime" : 1664650346,
    "last_content_update" : 1664650346116,
    "path" : "~/COVID/Origins/RestrictionSites/SARS2_Reverse_Genetics/scripts/CoV_restriction_mapping.R",
    "project_path" : "scripts/CoV_restriction_mapping.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}